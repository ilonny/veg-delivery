{"version":3,"sources":["lib/theme/index.js","app.js","pages/RestaurantOrder/sound/signal.mp3","global-styles.js","pages/HomePage/HomePage.js","pages/AddRest/AddRest.js","pages/AddUser/AddUser.js","pages/ListRest/ListRest.js","pages/RestaurantPage/RestaurantPage.js","pages/RestaurantMenu/RestaurantMenu.js","pages/RestaurantModif/RestaurantModif.js","pages/RestaurantDelivery/RestaurantDelivery.js","pages/RestaurantDiscount/RestaurantDiscount.js","pages/RestaurantOrder/RestaurantOrder.js","pages/RestaurantUsers/RestaurantUsers.js","pages/Moderate/Moderate.js","routes.js","pages/index.js","index.js","lib/store/index.js","lib/routing/index.js","lib/store/reducer.js","lib/index.js"],"names":["Color","black","red","gray","light_gray","SubMenu","Menu","Header","Layout","Content","Sider","MainComp","connect","state","user","main","dispatch","setUser","type","props","style","flex","alignItems","justifyContent","minHeight","name","onFinish","values","console","log","data","FormData","append","login","password","fetch","API_HOST","method","body","then","res","json","status","alert","message","userInfo","Item","label","rules","required","htmlType","width","className","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","title","to","pathname","role","onClick","undefined","setTimeout","window","location","href","padding","App","hot","module","exports","GlobalStyles","createGlobalStyle","HomePage","layout","labelCol","span","wrapperCol","AddRest","useState","value","setValue","input","document","querySelector","Object","keys","forEach","JSON","stringify","files","id","headers","onFinishFailed","errorInfo","initialValues","active","AddressSuggestions","token","onChange","AddUser","catch","err","Meta","Card","ListRest","list","setList","getData","e","useEffect","length","gutter","map","rest","addrText","parse","address_json","hoverable","cover","alt","src","image","description","cursor","marginTop","preventDefault","confirm","debounce","f","ms","isCooldown","apply","this","arguments","RestaurantPage","setData","startTime","setStartTime","endTime","setEndTime","restInfo","setRestInfo","deliveryTime","setDeliveryTime","restName","setRestName","addressValue","setAddressValue","time_start","time_end","restaurant_info","delivery_time","addressJson","delivery_radius","target","defaultQuery","encodeURIComponent","formData","min_price","Panel","Collapse","RestaurantMenu","newCategoryValue","setNewCategoryValue","getMenu","newItem","setNewItem","menu","category_id","cat","weight","price","file","dispatchEvent","Event","category","display","placeholder","order_by","defaultActiveKey","header","item","moderate","margin","maxWidth","Number","checked","multiple","modificators","split","val","options","filter","x","selected","modif","RestaurantModif","newModif","setNewModif","deleteModif","modifId","marginBottom","parent_id","getElementById","el","marginLeft","RestaurantDelivery","price_start","RestaurantDiscount","setMenu","types","renderInput","renderInputEdit","items","m","discount_value","promocode","RestaurantOrder","loading","setLoading","oldData","audioEl","play","dataSource","row","user_info","address","address_data","cartList","cart_list","phone","comment","flat","flat_p","floor","cartItem","count","selectedModificatorsAll","modificatorPart","index","modificatorPartParent","paddingLeft","chosen_variants","chosenVariant","flexDirection","totalPrice","total_price","deliveryPrice","delivery_price","date","date_create","payment_status","cancel_payment","Success","Message","Details","interval","setInterval","clearInterval","sound","controls","visibility","columns","dataIndex","scroll","RestaurantUsers","email","Moderate","restaurant","Routes","renderRoutes","path","exact","component","root","ReactDOM","render","store","persistor","history","enhacers","createBrowserHistory","initialState","persistConfig","storage","rootReducer","combineReducers","persistReducer","action","applyMiddleware","thunk","createStore","persistStore"],"mappings":"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","file":"static/js/main.34772862.chunk.js","sourcesContent":["export const Color = {\n    black: \"#333\",\n    red: \"#cc3333\",\n    gray: \"rgb(113, 113, 113)\",\n    light_gray: \"#F2F2F2\",\n};\n\nexport const Media = {\n    mobile: \"@media screen and (max-width: 500px)\",\n    tablet: \"@media screen and (max-width: 800px)\",\n    smallDesktop: \"@media screen and (max-width: 1151px)\",\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { mainRedcuer } from \"./lib/store\";\nimport { hot } from \"react-hot-loader\";\nimport { Normalize } from \"styled-normalize\";\n\nimport { Routes } from \"./routes\";\nimport { GlobalStyles } from \"./global-styles\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Form, Input, Button } from \"antd\";\n\nimport { Link } from \"react-router-dom\";\nimport { API_HOST } from \"./lib\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst _MainComp = (props) => {\n  // console.log(\"props\", props);\n  const { user, setUser } = props;\n  if (!user) {\n    const onFinish = (values) => {\n      console.log(\"Success:\", values);\n      const data = new FormData();\n      data.append(\"login\", values.login);\n      data.append(\"password\", values.password);\n      fetch(API_HOST + \"/user/login\", {\n        method: \"POST\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.status === 403) {\n            alert(res.message);\n          }\n          if (res.status === 200) {\n            props.setUser(res.userInfo);\n          }\n        });\n    };\n\n    return (\n      <>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            minHeight: \"100vh\",\n          }}\n        >\n          <Form name=\"basic\" onFinish={onFinish}>\n            <Form.Item\n              label=\"Логин\"\n              name=\"login\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Обязательное поле\",\n                },\n              ]}\n            >\n              <Input type=\"text\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Пароль\"\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Обязательное поле\",\n                },\n              ]}\n            >\n              <Input type=\"password\" />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Войти\n            </Button>\n          </Form>\n        </Layout>\n      </>\n    );\n  }\n  return (\n    <>\n      <Normalize />\n      <GlobalStyles />\n      <Layout style={{ flex: 1 }}>\n        <Layout>\n          <Header></Header>\n        </Layout>\n        <Layout>\n          <Sider width={200} className=\"site-layout-background\">\n            <Menu\n              mode=\"inline\"\n              defaultSelectedKeys={[]}\n              defaultOpenKeys={[]}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              <SubMenu key=\"sub1\" title=\"Рестораны\">\n                <Menu.Item key=\"1\">\n                  <Link to={{ pathname: \"/list-rest\", state: { user } }}>\n                    Список ресторанов\n                  </Link>\n                </Menu.Item>\n                {user.role != \"manager\" && (\n                  <Menu.Item key=\"2\">\n                    <Link to={{ pathname: \"/add-rest\", state: { user } }}>\n                      Добавить ресторан 123\n                    </Link>\n                    {/* <Link to={\"/add-rest\", { user }}>Добавить ресторан</Link> */}\n                  </Menu.Item>\n                )}\n              </SubMenu>\n              {user.role === \"admin\" && (\n                <Menu.Item key=\"3\">\n                  <Link to={\"/add-user\"}>Добавить партнера</Link>\n                </Menu.Item>\n              )}\n              {user.role === \"admin\" && (\n                <Menu.Item key=\"5\">\n                  <Link to={{ pathname: \"/moderate\", state: { user } }}>\n                    Модерация блюд\n                  </Link>\n                </Menu.Item>\n              )}\n              <Menu.Item key=\"4\">\n                <button\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                  }}\n                  onClick={() => {\n                    console.log(\"\");\n                    setUser(undefined);\n                    setTimeout(() => {\n                      window.location.href = \"/\";\n                    }, 1000);\n                  }}\n                >\n                  Выход\n                </button>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Content style={{ padding: 30 }}>\n            <Routes />\n          </Content>\n        </Layout>\n      </Layout>\n    </>\n  );\n};\n\nconst MainComp = connect(\n  (state) => ({\n    user: state.main.user,\n  }),\n  (dispatch) => ({\n    setUser: (user) => dispatch({ type: \"SET_USER\", user }),\n  })\n)(_MainComp);\n\nexport const App = hot(module)(() => (\n  <>\n    <MainComp />\n  </>\n));\n","module.exports = __webpack_public_path__ + \"static/media/signal.a0d0720b.mp3\";","import { createGlobalStyle } from \"styled-components\";\nimport { Color } from \"./lib/theme\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    font-family: \"Helvetica\", \"Open Sans\", sans-serif;\n    height: 100vh;\n    -webkit-font-smoothing: antialiased;\n    color: ${Color.black}\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  :root {\n    // font-size: 10px;\n  }\n  * {\n    box-sizing: border-box;\n    margin: 0px;\n    padding: 0px;\n    border-width: 0px;\n  }\n  body {\n  }\n\n  #root {\n  }\n\n  tt,\n  code,\n  kbd,\n  samp,\n  listing {\n  }\n`;\n","import React from \"react\";\n// import { Layout, Menu, Breadcrumb } from \"antd\";\n// import {\n//     UserOutlined,\n//     LaptopOutlined,\n//     NotificationOutlined,\n// } from \"@ant-design/icons\";\n\n// const { SubMenu } = Menu;\n// const { Header, Content, Sider } = Layout;\nexport const HomePage = () => (\n    <>\n        <p>Добро пожаловать</p>\n    </>\n);\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  // Upload,\n  // Select,\n  // InputNumber,\n  // Switch,\n  // Radio,\n  // Slider,\n  // Rate,\n  // Row,\n  // Col,\n} from \"antd\";\nimport { AddressSuggestions } from \"react-dadata\";\nimport \"react-dadata/dist/react-dadata.css\";\nimport { API_HOST } from \"../../lib\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport const AddRest = (props) => {\n  const { user } = props?.location?.state;\n  const onFinish = (values) => {\n    console.log(\"Success:\", { values, value });\n    let input = document.querySelector('input[type=\"file\"]');\n    let data = new FormData();\n    Object.keys(values).forEach((key) => {\n      if (key !== \"dragger\") {\n        data.append(\n          key,\n          key === \"address\" ? JSON.stringify(values[key]) : values[key]\n        );\n      }\n    });\n    data.append(\"file\", input.files[0]);\n    data.append(\"user_id\", user?.id);\n    // data.append(\"address\", JSON.stringify(value));\n    data.append(\"user\", \"hubot\");\n    fetch(API_HOST + \"/restaurant/add\", {\n      method: \"POST\",\n      body: data,\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        alert(res.message);\n        if (res.status === 200) {\n          document.location.href = \"/\";\n        } else {\n        }\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const [value, setValue] = useState();\n  return (\n    <>\n      <Form\n        name=\"basic\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        style={{ minHeight: \"100vh\" }}\n        initialValues={{\n          active: true,\n        }}\n        {...layout}\n      >\n        <Form.Item\n          label=\"Название\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Обязательное поле\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Описание\" name=\"description\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Изображение\" name=\"file\">\n          <Input type=\"file\" />\n        </Form.Item>\n        <Form.Item label=\"Адрес\" name=\"address\">\n          <AddressSuggestions\n            token=\"eadbc452286d23c7163b38989884d5ae40d08ade\"\n            value={value}\n            onChange={setValue}\n          />\n        </Form.Item>\n        {user.role === \"admin\" && (\n          <Form.Item label=\"Радиус доставки (км)\" name=\"delivery_radius\">\n            <Input />\n          </Form.Item>\n        )}\n        {/* <Form.Item name=\"active\" valuePropName=\"checked\">\n          <Checkbox>Активен</Checkbox>\n        </Form.Item> */}\n        <Button type=\"primary\" htmlType=\"submit\">\n          Сохранить\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  // Upload,\n  // Select,\n  // InputNumber,\n  // Switch,\n  // Radio,\n  // Slider,\n  // Rate,\n  // Row,\n  // Col,\n} from \"antd\";\nimport { AddressSuggestions } from \"react-dadata\";\nimport \"react-dadata/dist/react-dadata.css\";\nimport { API_HOST } from \"../../lib\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport const AddUser = () => {\n  const onFinish = (values) => {\n    console.log(\"Success:\", { values, value });\n    let data = new FormData();\n    Object.keys(values).forEach((key) => {\n      if (key !== \"dragger\") {\n        data.append(\n          key,\n          key === \"address\" ? JSON.stringify(values[key]) : values[key]\n        );\n      }\n    });\n    fetch(API_HOST + \"/restaurant/user-add\", {\n      method: \"POST\",\n      body: data,\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        alert(res.message);\n        if (res.status === 200) {\n          alert(\"Пользователь успешно добавлен\");\n          document.location.href = \"/\";\n        } else {\n          alert(\"Ошибка добавления пользователя\");\n        }\n      })\n      .catch((err) => {\n        alert(\"Ошибка добавления пользователя\");\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const [value, setValue] = useState();\n  return (\n    <>\n      <Form\n        name=\"basic\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        style={{ minHeight: \"100vh\" }}\n        initialValues={{\n          active: true,\n        }}\n        {...layout}\n      >\n        <Form.Item\n          label=\"Логин\"\n          name=\"login\"\n          rules={[\n            {\n              required: true,\n              message: \"Обязательное поле\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Пароль\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Обязательное поле\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Обязательное поле\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Сохранить\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col } from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\nconst { Meta } = Card;\nexport const ListRest = (props) => {\n  const [list, setList] = useState([]);\n  console.log(\"ListRest props\", props);\n  const { user } = props?.location?.state;\n  console.log(\"user??\", user);\n  const getData = () => {\n    try {\n      fetch(\n        API_HOST +\n          `/restaurant/list?token=${user.id === 1 ? \"ZWmGuABp3N6\" : \"\"}&user=${\n            user.id\n          }`\n      )\n        .then((res) => res.json())\n        .then((res) => setList(res));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  // console.log(\"list is\", list);\n  return (\n    <>\n      {!list.length ? (\n        \"Рестораны отсутствуют\"\n      ) : (\n        <Row gutter={[16, 16]}>\n          {list.map((rest) => {\n            let addrText;\n            try {\n              addrText = JSON.parse(rest.address_json).value;\n            } catch (e) {\n              addrText = \"Не определено\";\n            }\n            return (\n              <Link\n                to={{ pathname: \"/restaurant\", state: { id: rest.id, user } }}\n                key={rest.id}\n              >\n                <Col className=\"gutter-row\" span={6}>\n                  <Card\n                    hoverable\n                    style={{ width: 240 }}\n                    cover={<img alt=\"\" src={API_HOST + \"/\" + rest.image} />}\n                  >\n                    <Meta\n                      title={rest.name}\n                      description={rest.description + \"\\n\" + addrText}\n                    />\n                    {user.role !== \"manager\" && (\n                      <>\n                        <button\n                          style={{\n                            cursor: \"pointer\",\n                            padding: 10,\n                            marginTop: 10,\n                          }}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            console.log(\"rest copy\", rest);\n                            fetch(`${API_HOST}/restaurant/copy?id=${rest.id}`)\n                              .then((res) => res.json())\n                              .then((res) => {\n                                if (res.status == 200) {\n                                  getData();\n                                } else {\n                                  alert(\n                                    \"Ошибка при копировании, попробуйте позже\"\n                                  );\n                                }\n                              })\n                              .catch((err) => {\n                                alert(\n                                  \"Ошибка при копировании, попробуйте позже\"\n                                );\n                              });\n                          }}\n                        >\n                          Скопировать ресторан\n                        </button>\n                        <button\n                          style={{\n                            cursor: \"pointer\",\n                            padding: 10,\n                            marginTop: 10,\n                          }}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            console.log(\"rest delete\", rest);\n                            if (\n                              window.confirm(\"Подтвердите удаление ресторана\")\n                            ) {\n                              fetch(\n                                `${API_HOST}/restaurant/delete?id=${rest.id}`\n                              )\n                                .then((res) => res.json())\n                                .then((res) => {\n                                  if (res.status == 200) {\n                                    getData();\n                                  } else {\n                                    alert(\n                                      \"Ошибка при удалении, попробуйте позже\"\n                                    );\n                                  }\n                                })\n                                .catch((err) => {\n                                  alert(\n                                    \"Ошибка при удалении, попробуйте позже\"\n                                  );\n                                });\n                            }\n                          }}\n                        >\n                          Удалить ресторан\n                        </button>\n                      </>\n                    )}\n                  </Card>\n                </Col>\n              </Link>\n            );\n          })}\n        </Row>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Button, Input } from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\nimport { AddressSuggestions } from \"react-dadata\";\nimport \"react-dadata/dist/react-dadata.css\";\nconst { Meta } = Card;\n\nfunction debounce(f, ms) {\n  let isCooldown = false;\n\n  return function () {\n    if (isCooldown) return;\n\n    f.apply(this, arguments);\n\n    isCooldown = true;\n\n    setTimeout(() => (isCooldown = false), ms);\n  };\n}\n\nexport const RestaurantPage = (props) => {\n  const [data, setData] = useState(null);\n  const { id, user } = props.location.state;\n  const [startTime, setStartTime] = useState(false);\n  const [endTime, setEndTime] = useState(false);\n  const [restInfo, setRestInfo] = useState(false);\n  const [deliveryTime, setDeliveryTime] = useState(false);\n  const [restName, setRestName] = useState(false);\n  const [addressValue, setAddressValue] = useState(false);\n  useEffect(() => {\n    getData();\n  }, [id]);\n  const getData = () => {\n    try {\n      fetch(API_HOST + \"/restaurant/get-data?id=\" + id)\n        .then((res) => res.json())\n        .then((res) => {\n          setData(res);\n          setStartTime(res.time_start);\n          setEndTime(res.time_end);\n          setRestInfo(res.restaurant_info);\n          setDeliveryTime(res.delivery_time);\n          setRestName(res.name);\n          let addressJson = JSON.parse(res?.address_json);\n          console.log(\"addressJson\", addressJson);\n          setAddressValue(addressJson);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  let addrText;\n  try {\n    addrText = JSON.parse(data.address_json).value;\n  } catch (e) {\n    addrText = \"Не определено\";\n  }\n  console.log(\"rest data\", data, user);\n\n  if (!data) return null;\n  // const reOpenRest = () => {};\n\n  const changeTime = () => {\n    fetch(\n      API_HOST +\n        `/restaurant/edit-rest-time?id=${data.id}&start=${startTime}&end=${endTime}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Успешно сохранено\");\n        }\n        getData();\n      });\n  };\n\n  const changeDeliveryTime = () => {\n    fetch(\n      API_HOST +\n        `/restaurant/edit-rest-deliverytime?id=${data.id}&time=${deliveryTime}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Успешно сохранено\");\n        }\n        getData();\n      });\n  };\n\n  const changeRestName = () => {\n    fetch(\n      API_HOST + `/restaurant/edit-rest-name?id=${data.id}&value=${restName}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Успешно сохранено\");\n        }\n        getData();\n      });\n  };\n\n  const changeRestAddress = () => {\n    fetch(\n      API_HOST +\n        `/restaurant/edit-rest-address?id=${data.id}&value=${encodeURIComponent(\n          JSON.stringify(addressValue)\n        )}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Успешно сохранено\");\n        }\n        getData();\n      });\n  };\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col className=\"gutter-row\" span={10}>\n          <Card\n            hoverable\n            style={{ width: \"100%\" }}\n            cover={<img alt=\"\" src={API_HOST + \"/\" + data.image} />}\n          >\n            <Meta title={data.name} description={data.description} />\n            <p>{addrText}</p>\n            <p>Радиус доставки {data.delivery_radius} км</p>\n          </Card>\n        </Col>\n        <Col className=\"gutter-row\" span={10}>\n          <Link to={{ pathname: \"restaurant-order\", state: { id: id } }}>\n            <Button>Заказы</Button>\n          </Link>\n          <br />\n          <br />\n          <Link to={{ pathname: \"restaurant-menu\", state: { id: id } }}>\n            <Button>Меню</Button>\n          </Link>\n          <br />\n          <br />\n          <Link to={{ pathname: \"restaurant-modif\", state: { id: id } }}>\n            <Button>Модификаторы</Button>\n          </Link>\n          <br />\n          <br />\n          <label>\n            <span>Название</span>\n            <Input\n              value={restName}\n              onChange={(e) => {\n                setRestName(e.target.value);\n              }}\n            />\n          </label>\n          <br />\n          <Button onClick={() => changeRestName()}>Сохранить Название</Button>\n          <br />\n          <br />\n          <label>\n            <span>Адрес</span>\n            <AddressSuggestions\n              token=\"eadbc452286d23c7163b38989884d5ae40d08ade\"\n              value={addressValue}\n              defaultQuery={addressValue}\n              onChange={setAddressValue}\n            />\n            <br />\n            <Button onClick={() => changeRestAddress()}>Сохранить адрес</Button>\n            <br />\n          </label>\n          {user?.role == \"admin\" && (\n            <>\n              <br />\n              <br />\n              <label>\n                <span>Радиус доставки (км)</span>\n                <Input\n                  value={data.delivery_radius}\n                  onChange={(e) =>\n                    fetch(\n                      API_HOST +\n                        `/restaurant/edit-rest-radius?id=${data.id}&value=${e.target.value}`\n                    ).then((res) => getData())\n                  }\n                />\n              </label>\n            </>\n          )}\n          <br />\n          <br />\n          <label>\n            <span>Изменить изображение</span>\n            <Input\n              type=\"file\"\n              onChange={() => {\n                let input = document.querySelector('input[type=\"file\"]');\n                let formData = new FormData();\n                formData.append(\"file\", input.files[0]);\n                fetch(API_HOST + `/restaurant/edit-rest-image?id=${data.id}`, {\n                  method: \"POST\",\n                  body: formData,\n                })\n                  .then((res) => res.json())\n                  .then((res) => {\n                    if (res.status === 200) {\n                      getData();\n                    } else {\n                      alert(\"Ошибка при сохранении изображения\");\n                    }\n                  })\n                  .catch((err) => {\n                    alert(\"Ошибка при сохранении изображения\");\n                  });\n              }}\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            <span>Описание ресторана</span>\n            <Input\n              value={data.description}\n              onChange={debounce((e) => {\n                fetch(\n                  API_HOST +\n                    `/restaurant/edit-rest-desc?id=${data.id}&value=${e.target.value}`\n                ).then((res) => getData());\n              }, 1000)}\n            />\n          </label>\n          {user?.role == \"admin\" && (\n            <>\n              <br />\n              <br />\n              <Link\n                to={{\n                  pathname: \"restaurant-delivery\",\n                  state: { id: id },\n                }}\n              >\n                <Button>Стоимость доставки</Button>\n              </Link>\n            </>\n          )}\n          <br></br>\n          <br></br>\n          <label>\n            <span>Время открытия (чч:мм)</span>\n            <Input\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            <span>Время закрытия (чч:мм)</span>\n            <Input\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n            />\n          </label>\n          <br />\n          <Button onClick={() => changeTime()}>Сохранить время</Button>\n          {user?.role == \"admin\" && (\n            <>\n              <br />\n              <br />\n              <label>\n                <span>Сроки доставкии (например \"40-50 мин\")</span>\n                <Input\n                  value={deliveryTime}\n                  onChange={(e) => setDeliveryTime(e.target.value)}\n                />\n              </label>\n              <br />\n              <Button onClick={() => changeDeliveryTime()}>\n                Сохранить время\n              </Button>\n\n              <br />\n              <br />\n              <label>\n                <span>Минимальная сумма заказа (руб)</span>\n                <Input\n                  value={data.min_price}\n                  onChange={(e) =>\n                    fetch(\n                      API_HOST +\n                        `/restaurant/edit-rest-min-price?id=${data.id}&value=${e.target.value}`\n                    ).then((res) => getData())\n                  }\n                />\n              </label>\n            </>\n          )}\n          <br />\n          <br />\n          <label>\n            <span>Юридиская информация (название ООО, адрес, телефон)</span>\n            <Input\n              value={restInfo}\n              onChange={(e) => setRestInfo(e.target.value)}\n            />\n            <Button\n              onClick={() => {\n                fetch(\n                  API_HOST +\n                    `/restaurant/edit-rest-info?id=${data.id}&value=${restInfo}`\n                ).then((res) => getData());\n              }}\n            >\n              Сохранить\n            </Button>\n          </label>\n          <br />\n          <br />\n          <Button\n            onClick={() => {\n              fetch(\n                API_HOST +\n                  `/restaurant/edit-rest-active?id=${data.id}&value=${\n                    data.active == \"1\" ? 0 : 1\n                  }`\n              ).then((res) => getData());\n            }}\n          >\n            Ресторан {data.active == \"1\" ? \"открыт\" : \"закрыт\"} (нажмите чтобы{\" \"}\n            {data.active == \"1\" ? \"закрыть\" : \"открыть\"})\n          </Button>\n          <br />\n          <br />\n          <Link\n            to={{\n              pathname: \"restaurant-discount\",\n              state: { id: id },\n            }}\n          >\n            <Button>Скидки, акции и промокоды</Button>\n          </Link>\n          <br />\n          <br />\n          <label>\n            <span>Загрузить новое изображение</span>\n            <input\n              type=\"file\"\n              onChange={(e) => {\n                let formData = new FormData();\n                formData.append(\"file\", e.target.files[0]);\n                fetch(\n                  API_HOST + `/restaurant/change-rest-image?id=${data.id}`,\n                  {\n                    method: \"POST\",\n                    body: formData,\n                  }\n                ).then((res) => getData());\n              }}\n            />\n          </label>\n          <br />\n          <br />\n          <br />\n          {user?.role != \"manager\" && (\n            <Link\n              to={{\n                pathname: \"restaurant-users\",\n                state: { id: id },\n              }}\n            >\n              <Button>Список пользователей</Button>\n            </Link>\n          )}\n          <br />\n          <br />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\nconst { Panel } = Collapse;\n\nexport const RestaurantMenu = (props) => {\n  const [data, setData] = useState(null);\n  console.log(\"data is\", data);\n  const { id } = props.location.state;\n  const [newCategoryValue, setNewCategoryValue] = useState(false);\n\n  const getMenu = () => {\n    const data = new FormData();\n    data.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/get-menu\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setData(res);\n      });\n  };\n\n  useEffect(() => {\n    getMenu();\n  }, []);\n\n  const createCategory = () => {\n    const data = new FormData();\n    data.append(\"rest_id\", id);\n    data.append(\"category_name\", newCategoryValue);\n    fetch(API_HOST + \"/restaurant/create-category-menu\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((res) => getMenu());\n  };\n\n  const [newItem, setNewItem] = useState(false);\n  const saveItem = () => {\n    const formData = new FormData();\n    let input = document.querySelector(\"#new_item_image\");\n    console.log(\"data is \", data);\n    formData.append(\n      \"category_id\",\n      newItem.category_id ? newItem.category_id : data.menu[0].id\n    );\n    formData.append(\"description\", newItem.description);\n    formData.append(\"name\", newItem.name);\n    formData.append(\"price\", newItem.price);\n    formData.append(\"weight\", newItem.weight);\n    formData.append(\"file\", input.files[0]);\n    formData.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/add-item\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"успешно добавлено\");\n          getMenu();\n          // setNewItem({});\n        } else {\n          alert(\"не удалось добавить блюдо\");\n          getMenu();\n        }\n      });\n  };\n  console.log(\"newItem\", newItem);\n  return (\n    <>\n      <Link to={{ pathname: \"restaurant-modif\", state: { id: id } }}>\n        <Button>Редактировать модификаторы</Button>\n      </Link>\n      <Divider />\n      <Input onChange={(e) => setNewCategoryValue(e.target.value)} />\n      <Button onClick={createCategory}>Добавить категорию</Button>\n      <Divider />\n      {data && data.menu && (\n        <div>\n          <h3>Добавление блюда</h3>\n          <label>\n            <span>Категория</span>\n            <select\n              style={{ width: \"100%\", height: 40 }}\n              value={newItem.category_id}\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  category_id: e.target.value,\n                })\n              }\n            >\n              {data.menu.map((cat) => (\n                <option key={cat.id} value={cat.id}>\n                  {cat.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <label>\n            <span>Название</span>\n            <Input\n              onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\n            />\n          </label>\n          <br />\n          <label>\n            <span>Описание</span>\n            <Input\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  description: e.target.value,\n                })\n              }\n            />\n          </label>\n          <br />\n          <label>\n            <span>Вес (гр)</span>\n            <Input\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  weight: e.target.value,\n                })\n              }\n            />\n          </label>\n          <br />\n          <label>\n            <span>Цена (руб)</span>\n            <Input\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  price: e.target.value,\n                })\n              }\n            />\n          </label>\n          <br />\n          <label>\n            <span>Изображение</span>\n            <Input\n              type=\"file\"\n              id=\"new_item_image\"\n              value={newItem.file}\n              onChange={(e) => setNewItem({ ...newItem, file: e.target.value })}\n            />\n            <button\n              onClick={() => {\n                document.querySelector(\"#new_item_image\").value = \"\";\n                document\n                  .querySelector(\"#new_item_image\")\n                  .dispatchEvent(new Event(\"change\"));\n                setNewItem({ ...newItem, file: undefined });\n              }}\n              style={{ padding: 5 }}\n            >\n              сбросить выбор изображения\n            </button>\n          </label>\n          <br />\n          <Button onClick={saveItem} style={{ marginTop: 20 }}>\n            Сохранить\n          </Button>\n        </div>\n      )}\n      <Divider />\n      {data &&\n        data.menu.length &&\n        data.menu.map((category) => {\n          return (\n            <div key={category.id}>\n              <h3\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                {category.name}\n                <div>\n                  <Input\n                    placeholder=\"сортировка\"\n                    value={category.order_by}\n                    style={{ width: 150 }}\n                    onChange={(e) => {\n                      fetch(\n                        API_HOST +\n                          `/restaurant/change-rest-category-order?id=${category.id}&value=${e.target.value}`\n                      ).then((res) => getMenu());\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      if (window.confirm(\"Подтвердите удаление категории\")) {\n                        fetch(\n                          API_HOST +\n                            `/restaurant/delete-rest-category?id=${category.id}`\n                        ).then((res) => getMenu());\n                      }\n                    }}\n                  >\n                    Удалить\n                  </Button>\n                </div>\n              </h3>\n              <div>\n                <Collapse defaultActiveKey={[]}>\n                  <Panel header=\"Меню категории\" key=\"1\">\n                    {category.menu.map((item) => {\n                      return (\n                        <Collapse key={item.id} defaultActiveKey={[]}>\n                          <Panel\n                            header={\n                              <>\n                                {item.name}\n                                {!item.moderate && \" На модерации\"}\n                              </>\n                            }\n                            key=\"1\"\n                          >\n                            <div\n                              style={{\n                                margin: 15,\n                              }}\n                            >\n                              <Card>\n                                <label>\n                                  <span>Название - {item.name}</span>\n                                  <Input\n                                    placeholder=\"Новое название\"\n                                    onChange={(e) => {\n                                      fetch(\n                                        API_HOST +\n                                          `/restaurant/change-item?id=${item.id}&key=name&value=${e.target.value}`\n                                      ).then((res) => getMenu());\n                                    }}\n                                  />\n                                </label>\n                                <img\n                                  src={API_HOST + \"/\" + item.image}\n                                  style={{\n                                    maxWidth: 300,\n                                  }}\n                                />\n                                <input\n                                  type=\"file\"\n                                  onChange={(e) => {\n                                    let data = new FormData();\n                                    data.append(\"file\", e.target.files[0]);\n                                    fetch(\n                                      API_HOST +\n                                        `/restaurant/change-item-image?id=${item.id}\n                                                                        `,\n                                      {\n                                        method: \"POST\",\n                                        body: data,\n                                      }\n                                    ).then((res) => getMenu());\n                                  }}\n                                />\n                                <p>\n                                  <label>\n                                    <span>Описание - {item.description}</span>\n                                    <Input\n                                      placeholder=\"Новое описание\"\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=description&value=${e.target.value}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span> Вес - {item.weight} гр</span>\n                                    <Input\n                                      placeholder=\"Новый вес\"\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=weight&value=${e.target.value}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>Цена - {item.price} руб</span>\n                                    <Input\n                                      placeholder=\"Новый цена\"\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=price&value=${e.target.value}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>\n                                      {Number(item.active)\n                                        ? \"активно\"\n                                        : \"не активно\"}\n                                    </span>\n                                    <input\n                                      type=\"checkbox\"\n                                      checked={!!Number(item.active)}\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${\n                                              item.id\n                                            }&key=active&value=${\n                                              e.target.checked ? 1 : 0\n                                            }`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>Модификаторы</span>\n                                    <select\n                                      multiple\n                                      value={\n                                        item.modificators\n                                          ? item.modificators.split(\",\")\n                                          : []\n                                      }\n                                      style={{\n                                        width: \"100%\",\n                                      }}\n                                      onChange={(e) => {\n                                        const val = [...e.target.options]\n                                          .filter((x) => x.selected)\n                                          .map((x) => x.value);\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=modificators&value=${val}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    >\n                                      {data.modificators.map((modif) => {\n                                        return (\n                                          <option\n                                            key={modif.id}\n                                            value={modif.id}\n                                          >\n                                            {modif.name}\n                                          </option>\n                                        );\n                                      })}\n                                    </select>\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>Удалить блюдо </span>\n                                    <Button\n                                      onClick={(e) => {\n                                        if (\n                                          window.confirm(\"Подтвердите удаление\")\n                                        ) {\n                                          fetch(\n                                            API_HOST +\n                                              `/restaurant/delete-item?id=${item.id}`\n                                          ).then((res) => getMenu());\n                                        }\n                                      }}\n                                    >\n                                      Удалить\n                                    </Button>\n                                  </label>\n                                </p>\n                              </Card>\n                            </div>\n                          </Panel>\n                        </Collapse>\n                      );\n                    })}\n                  </Panel>\n                </Collapse>\n              </div>\n              <Divider />\n            </div>\n          );\n        })}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantModif = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"single\" });\n\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-modif-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"name\", newModif.name);\n        data.append(\"type\", newModif.type);\n        data.append(\n            \"parent_id\",\n            newModif.parent_id ? newModif.parent_id : null\n        );\n        fetch(API_HOST + \"/restaurant/create-rest-modif\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    return (\n        <>\n            <div>Модификаторы ресторана</div>\n            <Link to={{pathname: \"restaurant\", state: {id}}}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Название</span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, name: e.target.value })\n                    }\n                />\n            </label>\n            <label>\n                <span>Тип</span>\n                <select\n                    style={{ width: \"100%\", height: 40, marginBottom: 10 }}\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, type: e.target.value })\n                    }\n                >\n                    <option value=\"single\">Одиночный выбор из списка</option>\n                    <option value=\"multiple\">\n                        Множественный выбор из списка\n                    </option>\n                </select>\n            </label>\n            <Button onClick={createModif}>Добавить модификатор</Button>\n            <Divider />\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                }}\n                            >\n                                <h3>{modif.name}</h3>\n                                <Button onClick={() => deleteModif(modif.id)}>\n                                    Удалить\n                                </Button>\n                            </div>\n                            <br />\n                            <form id={\"form\" + modif.id}>\n                                <Input name=\"name\" placeholder=\"Название\" />\n                                <Input name=\"price\" placeholder=\"Цена\" />\n                                <Input\n                                    name=\"rest_id\"\n                                    type=\"hidden\"\n                                    value={id}\n                                />\n                                <Input\n                                    name=\"parent_id\"\n                                    type=\"hidden\"\n                                    value={modif.id}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        const formData = new FormData(\n                                            document.getElementById(\n                                                \"form\" + modif.id\n                                            )\n                                        );\n                                        fetch(\n                                            API_HOST +\n                                                \"/restaurant/create-rest-modif-variant\",\n                                            {\n                                                method: \"POST\",\n                                                body: formData,\n                                            }\n                                        )\n                                            .then((res) => res.json())\n                                            .then((res) => {\n                                                getData();\n                                                // setNewModif({type: \"single\"})\n                                            });\n                                    }}\n                                >\n                                    Добавить вариант\n                                </Button>\n                            </form>\n                            <br />\n                            {modif.list.map((el) => {\n                                return (\n                                    <Card key={el.id}>\n                                        <div\n                                            style={{\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                justifyContent: \"space-between\",\n                                            }}\n                                        >\n                                            <p>{el.name}</p>\n                                            <span>\n                                                <span>{el.price} руб</span>\n                                                <Button\n                                                    onClick={() =>\n                                                        deleteModif(el.id)\n                                                    }\n                                                    style={{ marginLeft: 20 }}\n                                                >\n                                                    Удалить\n                                                </Button>\n                                            </span>\n                                        </div>\n                                    </Card>\n                                );\n                            })}\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantDelivery = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"single\" });\n\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-delivery-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"price\", newModif.price);\n        data.append(\"price_start\", newModif.price_start);\n        fetch(API_HOST + \"/restaurant/create-rest-delivery\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    return (\n        <>\n            <div>Доставка ресторана</div>\n            <Link to={{ pathname: \"restaurant\", state: { id } }}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Заказ от</span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({\n                            ...newModif,\n                            price_start: e.target.value,\n                        })\n                    }\n                />\n            </label>\n            <label>\n                <span>Стоимость доставки </span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, price: e.target.value })\n                    }\n                />\n            </label>\n            <Button onClick={createModif}>Добавить доставку</Button>\n            <Divider />\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                }}\n                            >\n                                <label style={{ flex: 1 }}>\n                                    <span>Заказ от</span>\n                                    <Input\n                                        value={modif.price_start}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/edit-delivery?id=${modif.id}&key=price_start&value=${e.target.value}`\n                                            ).then((res) => getData());\n                                        }}\n                                    />\n                                </label>\n                                <label style={{ flex: 1, padding: 20 }}>\n                                    <span>Стоимость доставки</span>\n                                    <Input\n                                        value={modif.price}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/edit-delivery?id=${modif.id}&key=price&value=${e.target.value}`\n                                            ).then((res) => getData());\n                                        }}\n                                    />\n                                </label>\n                                <div>\n                                    {/* <label>&nbsp;</label> */}\n                                    <br></br>\n                                    <Button\n                                        onClick={() => {\n                                            if (\n                                                window.confirm(\n                                                    \"Подтвердите удаление\"\n                                                )\n                                            ) {\n                                                fetch(\n                                                    API_HOST +\n                                                        `/restaurant/delete-delivery?id=${modif.id}`\n                                                ).then((res) => getData());\n                                            }\n                                        }}\n                                    >\n                                        Удалить\n                                    </Button>\n                                </div>\n                            </div>\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantDiscount = (props) => {\n  const [data, setData] = useState(null);\n  const { id } = props.location.state;\n  const [newModif, setNewModif] = useState({ type: \"promocode\" });\n  const [menu, setMenu] = useState([]);\n  const types = [\n    { value: \"promocode\", name: \"Промокод\" },\n    { value: \"hours\", name: \"Скидка в счастливые часы\" },\n    { value: \"one_plus_one\", name: \"Скидка 1 + 1\" },\n  ];\n  const getData = () => {\n    fetch(API_HOST + \"/restaurant/get-discount-list?restaurant_id=\" + id)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n      });\n  };\n  useEffect(() => {\n    getData();\n    const formData = new FormData();\n    formData.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/get-menu\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((res) => setMenu(res.menu));\n    //es\n  }, []);\n  const createModif = () => {\n    const data = new FormData();\n    data.append(\"rest_id\", id);\n    data.append(\"type\", newModif.type ? newModif.type : \"\");\n    data.append(\"name\", newModif.name ? newModif.name : \"\");\n    data.append(\n      \"discount_value\",\n      newModif.discount_value ? newModif.discount_value : \"\"\n    );\n    data.append(\n      \"price_start\",\n      newModif.price_start ? newModif.price_start : \"\"\n    );\n    data.append(\n      \"description\",\n      newModif.description ? newModif.description : \"\"\n    );\n    data.append(\"promocode\", newModif.promocode ? newModif.promocode : \"\");\n    data.append(\"time_start\", newModif.time_start ? newModif.time_start : \"\");\n    data.append(\"time_end\", newModif.time_end ? newModif.time_end : \"\");\n    data.append(\"items\", newModif.items ? newModif.items : \"\");\n    fetch(API_HOST + \"/restaurant/create-rest-discount\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        getData();\n        // setNewModif({type: \"single\"})\n      });\n  };\n\n  const deleteModif = (modifId) => {\n    if (window.confirm(\"Подтверждение удаления\")) {\n      fetch(\n        API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n      ).then((res) => getData());\n    }\n  };\n  console.log(\"data\", data);\n  console.log(\"newModif\", newModif);\n  console.log(\"menu\", menu);\n  const renderInput = (label, name) => {\n    const key = name;\n    return (\n      <label>\n        <span>{label}</span>\n        <Input\n          onChange={(e) => {\n            const modif = { ...newModif };\n            modif[key] = e.target.value;\n            setNewModif({ ...modif });\n          }}\n        />\n      </label>\n    );\n  };\n  const renderInputEdit = (id, label, name, value) => {\n    return (\n      <label>\n        <span>{label}</span>\n        <Input\n          value={value}\n          onChange={(e) => {\n            fetch(\n              API_HOST +\n                `/restaurant/edit-discount?id=${id}&key=${name}&value=${e.target.value}`\n            ).then((res) => getData());\n          }}\n        />\n      </label>\n    );\n  };\n  return (\n    <>\n      <div>Скидки, акции и промокоды</div>\n      <Link to={{ pathname: \"restaurant\", state: { id } }}>\n        <Button>Назад в меню</Button>\n      </Link>\n      <Divider />\n      <label>\n        <span>Тип скидки</span>\n        <select\n          style={{ width: \"100%\", height: 40 }}\n          onChange={(e) => {\n            setNewModif({ ...newModif, type: e.target.value });\n          }}\n        >\n          {types.map((type) => {\n            return (\n              <option key={type.value} value={type.value}>\n                {type.name}\n              </option>\n            );\n          })}\n        </select>\n      </label>\n      <br />\n      {renderInput(\"Название\", \"name\")}\n      <br />\n      {renderInput(\"Описание\", \"description\")}\n      <br />\n      {renderInput(\"Промокод\", \"promocode\")}\n      <br />\n      {renderInput(\n        \"Значение скидки (например 300 р или 20 %  - через пробел)\",\n        \"discount_value\"\n      )}\n      <br />\n      {renderInput(\"Заказ от (р)\", \"price_start\")}\n      <br />\n      {renderInput(\"Время начала действия (чч:мм)\", \"time_start\")}\n      <br />\n      {renderInput(\"Время окончания действия (чч:мм)\", \"time_end\")}\n      <br />\n      <label>\n        <span>На какие блюда распространяется</span>\n        <select\n          multiple\n          style={{ width: \"100%\" }}\n          onChange={(e) => {\n            const val = [...e.target.options]\n              .filter((x) => x.selected)\n              .map((x) => x.value);\n            setNewModif({ ...newModif, items: val });\n          }}\n        >\n          {menu.map((m) => {\n            return (\n              <optgroup label={m.name}>\n                {m.menu.map((item) => {\n                  return <option value={item.id}>{item.name}</option>;\n                })}\n              </optgroup>\n            );\n          })}\n        </select>\n      </label>\n      <br />\n      <br />\n      <Button onClick={createModif}>Добавить акцию</Button>\n      <Divider />\n      <h3>Список акций</h3>\n      {data &&\n        data.length &&\n        data.map((modif) => {\n          return (\n            <div key={modif.id}>\n              <select\n                style={{ width: \"100%\", height: 40 }}\n                onChange={(e) => {\n                  fetch(\n                    API_HOST +\n                      `/restaurant/edit-discount?id=${modif.id}&key=type&value=${e.target.value}`\n                  ).then((res) => getData());\n                }}\n                value={modif.type}\n              >\n                {types.map((type) => {\n                  return (\n                    <option key={type.value} value={type.value}>\n                      {type.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <br />\n              {renderInputEdit(modif.id, \"Название\", \"name\", modif.name)}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Описание\",\n                \"description\",\n                modif.description\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Промокод\",\n                \"promocode\",\n                modif.promocode\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Значение скидки (например 300 р или 20 %  - через пробел)\",\n                \"discount_value\",\n                modif.discount_value\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Заказ от (р)\",\n                \"price_start\",\n                modif.price_start\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Время начала действия (чч:мм)\",\n                \"time_start\",\n                modif.time_start\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Время окончания действия (чч:мм)\",\n                \"time_end\",\n                modif.time_end\n              )}\n              <br />\n              <label>\n                <span>На какие блюда распространяется</span>\n                <select\n                  multiple\n                  style={{ width: \"100%\" }}\n                  value={modif.items ? modif.items.split(\",\") : []}\n                  onChange={(e) => {\n                    const val = [...e.target.options]\n                      .filter((x) => x.selected)\n                      .map((x) => x.value);\n                    fetch(\n                      API_HOST +\n                        `/restaurant/edit-discount?id=${modif.id}&key=items&value=${val}`\n                    ).then((res) => getData());\n                  }}\n                >\n                  {menu.map((m) => {\n                    return (\n                      <optgroup label={m.name}>\n                        {m.menu.map((item) => {\n                          return <option value={item.id}>{item.name}</option>;\n                        })}\n                      </optgroup>\n                    );\n                  })}\n                </select>\n              </label>\n              <br />\n              <br />\n              <Button\n                onClick={() => {\n                  if (window.confirm(\"Подтвердите удаление\")) {\n                    fetch(\n                      API_HOST + `/restaurant/delete-discount?id=${modif.id}`\n                    ).then((res) => getData());\n                  }\n                }}\n              >\n                Удалить акцию\n              </Button>\n              <Divider />\n            </div>\n          );\n        })}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  Table,\n  // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\nimport sound from \"./sound/signal.mp3\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantOrder = (props) => {\n  const [data, setData] = useState([]);\n  const { id } = props.location.state;\n  const [newModif, setNewModif] = useState({ type: \"single\" });\n  const [loading, setLoading] = useState(false);\n  const getData = (oldData) => {\n    console.log(\"getData fired\", oldData);\n    setLoading(true);\n    fetch(API_HOST + \"/restaurant/get-order-list?restaurant_id=\" + id)\n      .then((res) => res.json())\n      .then((res) => {\n        //res - массив с сервера\n        //data - то что было загружено ранее\n        setLoading(false);\n        const audioEl = document.getElementById(\"audio-element\");\n        if (oldData && res.length > oldData.length) {\n          console.log(\"res \", res);\n          console.log(\"oldData \", oldData);\n          audioEl.play();\n        }\n        setData(res);\n      });\n  };\n  useEffect(() => {\n    getData();\n    //es\n  }, []);\n\n  console.log(\"data\", data);\n  let dataSource = data.map((row) => {\n    const userInfo = JSON.parse(row.user_info);\n    const address = JSON.parse(row.address_data);\n    const cartList = JSON.parse(row.cart_list);\n\n    return {\n      id: row.id,\n      user: `Телефон: ${userInfo.phone}${\"\\n\"} Имя: ${\n        userInfo.name\n      } Комментарий: ${userInfo.comment} `,\n      address: `${address.value} Квартира: ${userInfo?.flat} Подъезд: ${userInfo?.flat_p} Этаж: ${userInfo?.floor}`,\n      cartList: cartList?.map((cartItem) => {\n        return (\n          <p>\n            {cartItem.name} - {cartItem.count} шт\n            {!!cartItem.selectedModificatorsAll &&\n              !!cartItem.selectedModificatorsAll.length &&\n              !!Object.keys(cartItem.selectedModificatorsAll[0]).length && (\n                <p>\n                  <span>Дополнительно:</span>\n                  {cartItem.selectedModificatorsAll.map(\n                    (modificatorPart, index) => {\n                      let modificatorPartKey = Object.keys(modificatorPart)[0];\n                      let modificatorPartParent =\n                        modificatorPart[modificatorPartKey];\n                      if (modificatorPartParent && modificatorPartParent.name) {\n                        return (\n                          <p\n                            style={{\n                              paddingLeft: 10,\n                            }}\n                            key={index}\n                          >\n                            <span>{modificatorPartParent.name}</span>\n                            {modificatorPartParent.chosen_variants.map(\n                              (chosenVariant, index) => {\n                                return (\n                                  <p\n                                    key={index}\n                                    style={{\n                                      paddingLeft: 10,\n                                      flexDirection: \"row\",\n                                      alignItems: \"center\",\n                                      justifyContent: \"space-between\",\n                                    }}\n                                  >\n                                    <span>{chosenVariant.name}</span>\n                                    <span>{chosenVariant.price} руб</span>\n                                  </p>\n                                );\n                              }\n                            )}\n                          </p>\n                        );\n                      }\n                      return <></>;\n                    }\n                  )}\n                </p>\n              )}\n            <Divider />\n          </p>\n        );\n      }),\n      totalPrice: row.total_price,\n      deliveryPrice: row.delivery_price,\n      date: row.date_create,\n      payment_status: row.payment_status == \"success\" ? \"Оплачен\" : \"Отменен\",\n      cancel_payment: (\n        <Button\n          onClick={() => {\n            if (\n              window.confirm(\n                `Вы действительно хотите отменить оплату закзаа ${row.id}?`\n              )\n            ) {\n              fetch(`${API_HOST}/payment/cancel?order_id=${row.id}`)\n                .then((res) => res.json())\n                .then((res) => {\n                  console.log(\"cancel payment response\", res);\n                  if (res.Success) {\n                    alert(\"Оплата отменена.\");\n                  } else {\n                    alert(\n                      \"Не удалось отменить оплату. \" +\n                        res.Message +\n                        \" \" +\n                        res.Details\n                    );\n                  }\n                });\n            }\n          }}\n        >\n          Отменить оплату\n        </Button>\n      ),\n    };\n  });\n\n  useEffect(() => {\n    let outerData = data;\n    const interval = setInterval(function log() {\n      getData(data);\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, [data]);\n\n  const columns = [\n    {\n      title: \"Отменить оплату\",\n      dataIndex: \"cancel_payment\",\n      key: \"cancel_payment\",\n    },\n    {\n      title: \"Номер\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"Заказчик\",\n      dataIndex: \"user\",\n      key: \"user\",\n    },\n    {\n      title: \"Адрес\",\n      dataIndex: \"address\",\n      key: \"address\",\n    },\n    {\n      title: \"Корзина\",\n      dataIndex: \"cartList\",\n      key: \"cartList\",\n    },\n    {\n      title: \"Стоимость заказа\",\n      dataIndex: \"totalPrice\",\n      key: \"totalPrice\",\n    },\n    {\n      title: \"Стоимость доставки\",\n      dataIndex: \"deliveryPrice\",\n      key: \"deliveryPrice\",\n    },\n    {\n      title: \"Дата\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    {\n      title: \"Дата\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    {\n      title: \"Статус оплаты\",\n      dataIndex: \"payment_status\",\n      key: \"payment_status\",\n    },\n  ];\n  return (\n    <>\n      <div>Заказы ресторана</div>\n      <Link to={{ pathname: \"restaurant\", state: { id } }}>\n        <Button>Назад в меню</Button>\n      </Link>\n      <audio\n        src={sound}\n        controls\n        id=\"audio-element\"\n        style={{ visibility: \"hidden\" }}\n      ></audio>\n      <Divider />\n      <Button onClick={() => getData()}>Обновить список</Button>\n      <Divider />\n      {loading && <p> Загрузка ... </p>}\n      <Divider />\n      <Table dataSource={dataSource} columns={columns} scroll={{ x: true }} />\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantUsers = (props) => {\n  const [data, setData] = useState(null);\n  const { id } = props.location.state;\n  console.log(\"RestaurantUsers\", id);\n  const [newModif, setNewModif] = useState({});\n  const [menu, setMenu] = useState([]);\n  const types = [\n    { value: \"promocode\", name: \"Промокод\" },\n    { value: \"hours\", name: \"Скидка в счастливые часы\" },\n    { value: \"one_plus_one\", name: \"Скидка 1 + 1\" },\n  ];\n  const getData = () => {\n    fetch(API_HOST + \"/restaurant/get-manager-list?restaurant_id=\" + id)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n      });\n  };\n  useEffect(() => {\n    getData();\n    const formData = new FormData();\n    formData.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/get-menu\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((res) => setMenu(res.menu));\n    //es\n  }, []);\n\n  const deleteModif = (modifId) => {\n    if (window.confirm(\"Подтверждение удаления\")) {\n      fetch(\n        API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n      ).then((res) => getData());\n    }\n  };\n  console.log(\"data\", data);\n  console.log(\"newModif\", newModif);\n  console.log(\"menu\", menu);\n  const renderInput = (label, name) => {\n    const key = name;\n    return (\n      <label>\n        <span>{label}</span>\n        <Input\n          onChange={(e) => {\n            const modif = { ...newModif };\n            modif[key] = e.target.value;\n            setNewModif({ ...modif });\n          }}\n        />\n      </label>\n    );\n  };\n  const renderInputEdit = (id, label, name, value) => {\n    return (\n      <label>\n        <span>{label}</span>\n        <Input\n          value={value}\n          onChange={(e) => {\n            fetch(\n              API_HOST +\n                `/restaurant/edit-discount?id=${id}&key=${name}&value=${e.target.value}`\n            ).then((res) => getData());\n          }}\n        />\n      </label>\n    );\n  };\n  return (\n    <>\n      <h3>Список пользователей филиала</h3>\n      <div>\n        {renderInput(\"Логин\", \"login\")}\n        {renderInput(\"Пароль\", \"password\")}\n        {renderInput(\"Email\", \"email\")}\n        <Button\n          onClick={() => {\n            let data = new FormData();\n            data.append(\"login\", newModif?.login);\n            data.append(\"email\", newModif?.email);\n            data.append(\"password\", newModif?.password);\n            data.append(\"rest_id\", id);\n            fetch(API_HOST + \"/restaurant/manager-add\", {\n              method: \"POST\",\n              body: data,\n            })\n              .then((res) => res.json())\n              .then((res) => {\n                if (res.status === 200) {\n                  getData();\n                } else {\n                  alert(\"Ошибка при создании пользователя\");\n                }\n              })\n              .catch((err) => {\n                alert(\"Ошибка при создании пользователя\");\n              });\n          }}\n        >\n          Создать\n        </Button>\n      </div>\n      <Divider />\n      <div>\n        {data?.map((el) => {\n          return (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p>{el.id}</p>\n                <p>{el.login}</p>\n                <Button\n                  onClick={() => {\n                    if (window.confirm(\"Подтвердите удаление\")) {\n                      fetch(API_HOST + \"/restaurant/manager-delete?id=\" + el.id)\n                        .then((res) => res.json())\n                        .then(() => getData());\n                    }\n                  }}\n                >\n                  Удалить\n                </Button>\n              </div>\n              <Divider />\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\nconst { Panel } = Collapse;\n\nexport const Moderate = (props) => {\n  const [data, setData] = useState([]);\n  const { id } = props.location.state;\n  const [newModif, setNewModif] = useState({ type: \"single\" });\n\n  const getData = () => {\n    fetch(API_HOST + \"/restaurant/get-moderate-list\")\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n      });\n  };\n  const getMenu = getData;\n  useEffect(() => {\n    getData();\n    //es\n  }, []);\n\n  console.log(\"data\", data);\n  return (\n    <>\n      <div>Модерация блюд</div>\n      {data.map((item) => {\n        return (\n          <>\n            <Collapse key={item.id} defaultActiveKey={[]}>\n              <Panel\n                header={\n                  <>\n                    {item.name}\n                    {!item.moderate && \" На модерации\"} (\n                    {item?.restaurant?.name}{\" \"}\n                    {JSON.parse(item?.restaurant?.address_json).value})\n                  </>\n                }\n                key=\"1\"\n              >\n                <div\n                  style={{\n                    margin: 15,\n                  }}\n                >\n                  <Card>\n                    <label>\n                      <span>Название - {item.name}</span>\n                      <Input\n                        placeholder=\"Новое название\"\n                        onChange={(e) => {\n                          fetch(\n                            API_HOST +\n                              `/restaurant/change-item?id=${item.id}&key=name&value=${e.target.value}`\n                          ).then((res) => getMenu());\n                        }}\n                      />\n                    </label>\n                    <img\n                      src={API_HOST + \"/\" + item.image}\n                      style={{\n                        maxWidth: 300,\n                      }}\n                    />\n                    <input\n                      type=\"file\"\n                      onChange={(e) => {\n                        let data = new FormData();\n                        data.append(\"file\", e.target.files[0]);\n                        fetch(\n                          API_HOST +\n                            `/restaurant/change-item-image?id=${item.id}\n                                                                        `,\n                          {\n                            method: \"POST\",\n                            body: data,\n                          }\n                        ).then((res) => getMenu());\n                      }}\n                    />\n                    <p>\n                      <label>\n                        <span>Описание - {item.description}</span>\n                        <Input\n                          placeholder=\"Новое описание\"\n                          onChange={(e) => {\n                            fetch(\n                              API_HOST +\n                                `/restaurant/change-item?id=${item.id}&key=description&value=${e.target.value}`\n                            ).then((res) => getMenu());\n                          }}\n                        />\n                      </label>\n                    </p>\n                    <p>\n                      <label>\n                        <span> Вес - {item.weight} гр</span>\n                        <Input\n                          placeholder=\"Новый вес\"\n                          onChange={(e) => {\n                            fetch(\n                              API_HOST +\n                                `/restaurant/change-item?id=${item.id}&key=weight&value=${e.target.value}`\n                            ).then((res) => getMenu());\n                          }}\n                        />\n                      </label>\n                    </p>\n                    <p>\n                      <label>\n                        <span>Цена - {item.price} руб</span>\n                        <Input\n                          placeholder=\"Новая цена\"\n                          onChange={(e) => {\n                            fetch(\n                              API_HOST +\n                                `/restaurant/change-item?id=${item.id}&key=price&value=${e.target.value}`\n                            ).then((res) => getMenu());\n                          }}\n                        />\n                      </label>\n                    </p>\n                    <p>\n                      <label>\n                        <span>\n                          {Number(item.active) ? \"активно\" : \"не активно\"}\n                        </span>\n                        <input\n                          type=\"checkbox\"\n                          checked={!!Number(item.active)}\n                          onChange={(e) => {\n                            fetch(\n                              API_HOST +\n                                `/restaurant/change-item?id=${\n                                  item.id\n                                }&key=active&value=${e.target.checked ? 1 : 0}`\n                            ).then((res) => getMenu());\n                          }}\n                        />\n                      </label>\n                    </p>\n                    {/* <p>\n                                            <label>\n                                                <span>Модификаторы</span>\n                                                <select\n                                                    multiple\n                                                    value={\n                                                        item.modificators\n                                                            ? item.modificators.split(\",\")\n                                                            : []\n                                                    }\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                    onChange={(e) => {\n                                                        const val = [...e.target.options]\n                                                            .filter((x) => x.selected)\n                                                            .map((x) => x.value);\n                                                        fetch(\n                                                            API_HOST +\n                                                            `/restaurant/change-item?id=${item.id}&key=modificators&value=${val}`\n                                                        ).then((res) => getMenu());\n                                                    }}\n                                                >\n                                                    {data.modificators.map((modif) => {\n                                                        return (\n                                                            <option\n                                                                key={modif.id}\n                                                                value={modif.id}\n                                                            >\n                                                                {modif.name}\n                                                            </option>\n                                                        );\n                                                    })}\n                                                </select>\n                                            </label>\n                                        </p> */}\n                    <p>\n                      <label>\n                        <span>Удалить блюдо </span>\n                        <Button\n                          onClick={(e) => {\n                            if (window.confirm(\"Подтвердите удаление\")) {\n                              fetch(\n                                API_HOST +\n                                  `/restaurant/delete-item?id=${item.id}`\n                              ).then((res) => getMenu());\n                            }\n                          }}\n                        >\n                          Удалить\n                        </Button>\n                      </label>\n                    </p>\n                    <p>\n                      <label>\n                        <span>Согласовать блюдо </span>\n                        <Button\n                          onClick={(e) => {\n                            if (window.confirm(\"Подтвердите действие\")) {\n                              fetch(\n                                API_HOST +\n                                  `/restaurant/approve-item?id=${item.id}`\n                              ).then((res) => getMenu());\n                            }\n                          }}\n                        >\n                          Согласовать\n                        </Button>\n                      </label>\n                    </p>\n                  </Card>\n                </div>\n              </Panel>\n            </Collapse>\n          </>\n        );\n      })}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport { routes } from \"./pages\";\n\nexport const Routes = () => <>{renderRoutes(routes())}</>;\n","import { HomePage } from \"./HomePage\";\nimport { AddRest } from \"./AddRest\";\nimport { AddUser } from \"./AddUser\";\nimport { ListRest } from \"./ListRest\";\nimport { RestaurantPage } from \"./RestaurantPage\";\nimport { RestaurantMenu } from \"./RestaurantMenu\";\nimport { RestaurantModif } from \"./RestaurantModif\";\nimport { RestaurantDelivery } from \"./RestaurantDelivery\";\nimport { RestaurantDiscount } from \"./RestaurantDiscount\";\nimport { RestaurantOrder } from \"./RestaurantOrder\";\nimport { RestaurantUsers } from \"./RestaurantUsers\";\nimport { Moderate } from \"./Moderate\";\n\nexport const routes = () => [\n  {\n    path: \"/\",\n    exact: true,\n    component: HomePage,\n  },\n  {\n    path: \"/add-rest\",\n    component: AddRest,\n  },\n  {\n    path: \"/add-user\",\n    component: AddUser,\n  },\n  {\n    path: \"/list-rest\",\n    component: ListRest,\n  },\n  {\n    path: \"/restaurant\",\n    component: RestaurantPage,\n  },\n  {\n    path: \"/restaurant-menu\",\n    component: RestaurantMenu,\n  },\n  {\n    path: \"/restaurant-modif\",\n    component: RestaurantModif,\n  },\n  {\n    path: \"/restaurant-delivery\",\n    component: RestaurantDelivery,\n  },\n  {\n    path: \"/restaurant-discount\",\n    component: RestaurantDiscount,\n  },\n  {\n    path: \"/restaurant-order\",\n    component: RestaurantOrder,\n  },\n  {\n    path: \"/restaurant-users\",\n    component: RestaurantUsers,\n  },\n  {\n    path: \"/moderate\",\n    component: Moderate,\n  },\n];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { history } from \"./lib\";\nimport { App } from \"./app\";\nimport { store, persistor } from \"./lib\";\nconst root = document.querySelector(\"#root\");\nconst render = () => {\n    if (root) {\n        ReactDOM.render(\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <Router history={history}>\n                        <App />\n                    </Router>\n                </PersistGate>\n            </Provider>,\n            root\n        );\n    }\n};\n\nif (module.hot) {\n    module.hot.accept(\"./app\", render);\n}\n\nrender();\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n// import { sideBarReducer, categoriesReducer } from \"../../features\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { mainReducer } from \"./reducer\";\nconst persistConfig = {\n    key: \"main\",\n    storage,\n};\nconst rootReducer = combineReducers({\n    main: persistReducer(persistConfig, mainReducer),\n    // sidebar: sideBarReducer,\n    // categories: categoriesReducer,\n});\n\n// const persistedReducer =\n\nlet enhacers;\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n    enhacers = applyMiddleware(thunk, createLogger({ collapsed: true }));\n} else {\n    enhacers = applyMiddleware(thunk);\n}\n\nfunction configureStore() {\n    const store = createStore(rootReducer, undefined, enhacers);\n    return store;\n}\n\nexport const store = configureStore();\nexport const persistor = persistStore(store);\n","import { createBrowserHistory } from \"history\"\n\nexport const history = createBrowserHistory()","const initialState = {\n  user: undefined,\n};\nexport const mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      console.log(\"SET_USER\", action);\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","export * from \"./theme\";\nexport * from \"./routing\";\nexport * from \"./store\";\nexport * from \"./links\";\nexport * from \"./containers\";\n// export const API_HOST = \"http://localhost:21080\";\nexport const API_HOST =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://app.vegfood.delivery\"\n    : \"http://localhost:21080\";\n"],"sourceRoot":""}