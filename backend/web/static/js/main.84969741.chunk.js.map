{"version":3,"sources":["lib/theme/index.js","app.js","global-styles.js","pages/HomePage/HomePage.js","pages/AddRest/AddRest.js","pages/ListRest/ListRest.js","pages/RestaurantPage/RestaurantPage.js","pages/RestaurantMenu/RestaurantMenu.js","pages/RestaurantModif/RestaurantModif.js","pages/RestaurantDelivery/RestaurantDelivery.js","pages/RestaurantDiscount/RestaurantDiscount.js","pages/RestaurantOrder/RestaurantOrder.js","routes.js","pages/index.js","index.js","lib/store/index.js","lib/routing/index.js","lib/store/reducer.js","lib/index.js"],"names":["Color","black","red","gray","light_gray","SubMenu","Menu","Header","Layout","Content","Sider","MainComp","connect","state","user","main","dispatch","setUser","type","props","style","flex","alignItems","justifyContent","minHeight","name","onFinish","values","console","log","data","FormData","append","login","password","fetch","API_HOST","method","body","then","res","json","status","alert","message","userInfo","Item","label","rules","required","htmlType","width","className","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","title","to","role","padding","App","hot","module","GlobalStyles","createGlobalStyle","HomePage","layout","labelCol","span","wrapperCol","AddRest","useState","value","setValue","input","document","querySelector","Object","keys","forEach","JSON","stringify","files","headers","location","href","onFinishFailed","errorInfo","initialValues","active","AddressSuggestions","token","onChange","valuePropName","Meta","Card","ListRest","list","setList","useEffect","e","length","gutter","map","rest","addrText","parse","address_json","pathname","id","hoverable","cover","alt","src","image","description","debounce","f","ms","isCooldown","apply","this","arguments","setTimeout","RestaurantPage","setData","startTime","setStartTime","endTime","setEndTime","restInfo","setRestInfo","deliveryTime","setDeliveryTime","getData","time_start","time_end","restaurant_info","delivery_time","delivery_radius","target","onClick","min_price","formData","Panel","Collapse","RestaurantMenu","newCategoryValue","setNewCategoryValue","getMenu","newItem","setNewItem","menu","category_id","cat","weight","price","file","dispatchEvent","Event","undefined","marginTop","category","display","placeholder","order_by","window","confirm","defaultActiveKey","header","item","margin","maxWidth","checked","multiple","modificators","split","val","options","filter","x","selected","modif","RestaurantModif","newModif","setNewModif","deleteModif","modifId","marginBottom","parent_id","getElementById","el","marginLeft","RestaurantDelivery","price_start","RestaurantDiscount","setMenu","types","renderInput","renderInputEdit","items","m","discount_value","promocode","RestaurantOrder","loading","setLoading","dataSource","row","user_info","address","address_data","cartList","cart_list","phone","comment","flat","flat_p","floor","cartItem","count","selectedModificatorsAll","modificatorPart","index","modificatorPartParent","paddingLeft","chosen_variants","chosenVariant","flexDirection","totalPrice","total_price","deliveryPrice","delivery_price","date","date_create","payment_status","interval","setInterval","clearInterval","columns","dataIndex","Routes","renderRoutes","path","exact","component","root","ReactDOM","render","store","persistor","history","enhacers","createBrowserHistory","initialState","persistConfig","storage","rootReducer","combineReducers","persistReducer","action","applyMiddleware","thunk","createStore","persistStore"],"mappings":"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","file":"static/js/main.84969741.chunk.js","sourcesContent":["export const Color = {\n    black: \"#333\",\n    red: \"#cc3333\",\n    gray: \"rgb(113, 113, 113)\",\n    light_gray: \"#F2F2F2\",\n};\n\nexport const Media = {\n    mobile: \"@media screen and (max-width: 500px)\",\n    tablet: \"@media screen and (max-width: 800px)\",\n    smallDesktop: \"@media screen and (max-width: 1151px)\",\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { mainRedcuer } from \"./lib/store\";\nimport { hot } from \"react-hot-loader\";\nimport { Normalize } from \"styled-normalize\";\n\nimport { Routes } from \"./routes\";\nimport { GlobalStyles } from \"./global-styles\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Form, Input, Button } from \"antd\";\n\nimport { Link } from \"react-router-dom\";\nimport { API_HOST } from \"./lib\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst _MainComp = (props) => {\n    // console.log(\"props\", props);\n    const { user } = props;\n    if (!user) {\n        const onFinish = (values) => {\n            console.log(\"Success:\", values);\n            const data = new FormData();\n            data.append(\"login\", values.login);\n            data.append(\"password\", values.password);\n            fetch(API_HOST + \"/user/login\", {\n                method: \"POST\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((res) => {\n                    if (res.status === 403) {\n                        alert(res.message);\n                    }\n                    if (res.status === 200) {\n                        props.setUser(res.userInfo);\n                    }\n                });\n        };\n\n        return (\n            <>\n                <Layout\n                    style={{\n                        flex: 1,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        minHeight: \"100vh\",\n                    }}\n                >\n                    <Form name=\"basic\" onFinish={onFinish}>\n                        <Form.Item\n                            label=\"Логин\"\n                            name=\"login\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Обязательное поле\",\n                                },\n                            ]}\n                        >\n                            <Input type=\"text\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Пароль\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Обязательное поле\",\n                                },\n                            ]}\n                        >\n                            <Input type=\"password\" />\n                        </Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Войти\n                        </Button>\n                    </Form>\n                </Layout>\n            </>\n        );\n    }\n    return (\n        <>\n            <Normalize />\n            <GlobalStyles />\n            <Layout style={{ flex: 1 }}>\n                <Layout>\n                    <Header></Header>\n                </Layout>\n                <Layout>\n                    <Sider width={200} className=\"site-layout-background\">\n                        <Menu\n                            mode=\"inline\"\n                            defaultSelectedKeys={[]}\n                            defaultOpenKeys={[]}\n                            style={{ height: \"100%\", borderRight: 0 }}\n                        >\n                            <SubMenu key=\"sub1\" title=\"Рестораны\">\n                                <Menu.Item key=\"1\">\n                                    <Link to={\"/list-rest\"}>\n                                        Список ресторанов\n                                    </Link>\n                                </Menu.Item>\n                                {user.role === \"admin\" && (\n                                    <Menu.Item key=\"2\">\n                                        <Link to={\"/add-rest\"}>\n                                            Добавить ресторан\n                                        </Link>\n                                    </Menu.Item>\n                                )}\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: 30 }}>\n                        <Routes />\n                    </Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n};\n\nconst MainComp = connect(\n    (state) => ({\n        user: state.main.user,\n    }),\n    (dispatch) => ({\n        setUser: (user) => dispatch({ type: \"SET_USER\", user }),\n    })\n)(_MainComp);\n\nexport const App = hot(module)(() => (\n    <>\n        <MainComp />\n    </>\n));\n","import { createGlobalStyle } from \"styled-components\";\nimport { Color } from \"./lib/theme\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    font-family: \"Helvetica\", \"Open Sans\", sans-serif;\n    height: 100vh;\n    -webkit-font-smoothing: antialiased;\n    color: ${Color.black}\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  :root {\n    // font-size: 10px;\n  }\n  * {\n    box-sizing: border-box;\n    margin: 0px;\n    padding: 0px;\n    border-width: 0px;\n  }\n  body {\n  }\n\n  #root {\n  }\n\n  tt,\n  code,\n  kbd,\n  samp,\n  listing {\n  }\n`;\n","import React from \"react\";\n// import { Layout, Menu, Breadcrumb } from \"antd\";\n// import {\n//     UserOutlined,\n//     LaptopOutlined,\n//     NotificationOutlined,\n// } from \"@ant-design/icons\";\n\n// const { SubMenu } = Menu;\n// const { Header, Content, Sider } = Layout;\nexport const HomePage = () => (\n    <>\n        <p>Добро пожаловать</p>\n    </>\n);\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  // Upload,\n  // Select,\n  // InputNumber,\n  // Switch,\n  // Radio,\n  // Slider,\n  // Rate,\n  // Row,\n  // Col,\n} from \"antd\";\nimport { AddressSuggestions } from \"react-dadata\";\nimport \"react-dadata/dist/react-dadata.css\";\nimport { API_HOST } from \"../../lib\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport const AddRest = () => {\n  const onFinish = (values) => {\n    console.log(\"Success:\", { values, value });\n    let input = document.querySelector('input[type=\"file\"]');\n    let data = new FormData();\n    Object.keys(values).forEach((key) => {\n      if (key !== \"dragger\") {\n        data.append(\n          key,\n          key === \"address\" ? JSON.stringify(values[key]) : values[key]\n        );\n      }\n    });\n    data.append(\"file\", input.files[0]);\n    // data.append(\"address\", JSON.stringify(value));\n    data.append(\"user\", \"hubot\");\n    fetch(API_HOST + \"/restaurant/add\", {\n      method: \"POST\",\n      body: data,\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        alert(res.message);\n        if (res.status === 200) {\n          document.location.href = \"/\";\n        } else {\n        }\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const [value, setValue] = useState();\n  return (\n    <>\n      <Form\n        name=\"basic\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        style={{ minHeight: \"100vh\" }}\n        initialValues={{\n          active: true,\n        }}\n        {...layout}\n      >\n        <Form.Item\n          label=\"Название\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Обязательное поле\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Описание\" name=\"description\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Изобржаение\" name=\"file\">\n          <Input type=\"file\" />\n        </Form.Item>\n        <Form.Item label=\"Адрес\" name=\"address\">\n          <AddressSuggestions\n            token=\"eadbc452286d23c7163b38989884d5ae40d08ade\"\n            value={value}\n            onChange={setValue}\n          />\n        </Form.Item>\n        <Form.Item label=\"Радиус доставки (км)\" name=\"delivery_radius\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"active\" valuePropName=\"checked\">\n          <Checkbox>Активен</Checkbox>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Сохранить\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col } from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\nconst { Meta } = Card;\nexport const ListRest = () => {\n    const [list, setList] = useState([]);\n    useEffect(() => {\n        try {\n            fetch(API_HOST + \"/restaurant/list?token=ZWmGuABp3N6\")\n                .then((res) => res.json())\n                .then((res) => setList(res));\n        } catch (e) {\n            console.log(e);\n        }\n    }, []);\n    // console.log(\"list is\", list);\n    return (\n        <>\n            {!list.length ? (\n                \"Загрузка\"\n            ) : (\n                <Row gutter={[16, 16]}>\n                    {list.map((rest) => {\n                        let addrText;\n                        try {\n                            addrText = JSON.parse(rest.address_json).value;\n                        } catch (e) {\n                            addrText = \"Не определено\";\n                        }\n                        return (\n                            <Link to={{pathname: '/restaurant', state: {id: rest.id}}} key={rest.id}>\n                                <Col\n                                    className=\"gutter-row\"\n                                    span={6}\n                                >\n                                    <Card\n                                        hoverable\n                                        style={{ width: 240 }}\n                                        cover={\n                                            <img\n                                                alt=\"\"\n                                                src={\n                                                    API_HOST + \"/\" + rest.image\n                                                }\n                                            />\n                                        }\n                                    >\n                                        <Meta\n                                            title={rest.name}\n                                            description={\n                                                rest.description +\n                                                \"\\n\" +\n                                                addrText\n                                            }\n                                        />\n                                    </Card>\n                                </Col>\n                            </Link>\n                        );\n                    })}\n                </Row>\n            )}\n        </>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Button, Input } from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\n\nfunction debounce(f, ms) {\n  let isCooldown = false;\n\n  return function () {\n    if (isCooldown) return;\n\n    f.apply(this, arguments);\n\n    isCooldown = true;\n\n    setTimeout(() => (isCooldown = false), ms);\n  };\n}\n\nexport const RestaurantPage = (props) => {\n  const [data, setData] = useState(null);\n  const { id } = props.location.state;\n  const [startTime, setStartTime] = useState(false);\n  const [endTime, setEndTime] = useState(false);\n  const [restInfo, setRestInfo] = useState(false);\n  const [deliveryTime, setDeliveryTime] = useState(false);\n  useEffect(() => {\n    getData();\n  }, [id]);\n  const getData = () => {\n    try {\n      fetch(API_HOST + \"/restaurant/get-data?id=\" + id)\n        .then((res) => res.json())\n        .then((res) => {\n          setData(res);\n          setStartTime(res.time_start);\n          setEndTime(res.time_end);\n          setRestInfo(res.restaurant_info);\n          setDeliveryTime(res.delivery_time);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  let addrText;\n  try {\n    addrText = JSON.parse(data.address_json).value;\n  } catch (e) {\n    addrText = \"Не определено\";\n  }\n  console.log(\"rest data\", data);\n\n  if (!data) return null;\n  // const reOpenRest = () => {};\n\n  const changeTime = () => {\n    fetch(\n      API_HOST +\n        `/restaurant/edit-rest-time?id=${data.id}&start=${startTime}&end=${endTime}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Успешно сохранено\");\n        }\n        getData();\n      });\n  };\n\n  const changeDeliveryTime = () => {\n    fetch(\n      API_HOST +\n        `/restaurant/edit-rest-deliverytime?id=${data.id}&time=${deliveryTime}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Успешно сохранено\");\n        }\n        getData();\n      });\n  };\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col className=\"gutter-row\" span={10}>\n          <Card\n            hoverable\n            style={{ width: \"100%\" }}\n            cover={<img alt=\"\" src={API_HOST + \"/\" + data.image} />}\n          >\n            <Meta title={data.name} description={data.description} />\n            <p>{addrText}</p>\n            <p>Радиус доставки {data.delivery_radius} км</p>\n          </Card>\n        </Col>\n        <Col className=\"gutter-row\" span={10}>\n          <Link to={{ pathname: \"restaurant-order\", state: { id: id } }}>\n            <Button>Заказы</Button>\n          </Link>\n          <br />\n          <br />\n          <Link to={{ pathname: \"restaurant-menu\", state: { id: id } }}>\n            <Button>Меню</Button>\n          </Link>\n          <br />\n          <br />\n          <Link to={{ pathname: \"restaurant-modif\", state: { id: id } }}>\n            <Button>Модификаторы</Button>\n          </Link>\n          <br />\n          <br />\n          <label>\n            <span>Радиус доставки (км)</span>\n            <Input\n              value={data.delivery_radius}\n              onChange={(e) =>\n                fetch(\n                  API_HOST +\n                    `/restaurant/edit-rest-radius?id=${data.id}&value=${e.target.value}`\n                ).then((res) => getData())\n              }\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            <span>Описание ресторана</span>\n            <Input\n              value={data.description}\n              onChange={debounce((e) => {\n                fetch(\n                  API_HOST +\n                    `/restaurant/edit-rest-desc?id=${data.id}&value=${e.target.value}`\n                ).then((res) => getData());\n              }, 1000)}\n            />\n          </label>\n          <br />\n          <br />\n          <Link\n            to={{\n              pathname: \"restaurant-delivery\",\n              state: { id: id },\n            }}\n          >\n            <Button>Стоимость доставки</Button>\n          </Link>\n          <br></br>\n          <br></br>\n          <label>\n            <span>Время открытия (чч:мм)</span>\n            <Input\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            <span>Время закрытия (чч:мм)</span>\n            <Input\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n            />\n          </label>\n          <br />\n          <Button onClick={() => changeTime()}>Сохранить время</Button>\n\n          <br />\n          <br />\n          <label>\n            <span>Сроки доставкии (например \"40-50 мин\")</span>\n            <Input\n              value={deliveryTime}\n              onChange={(e) => setDeliveryTime(e.target.value)}\n            />\n          </label>\n          <br />\n          <Button onClick={() => changeDeliveryTime()}>Сохранить время</Button>\n\n          <br />\n          <br />\n          <label>\n            <span>Минимальная сумма заказа (руб)</span>\n            <Input\n              value={data.min_price}\n              onChange={(e) =>\n                fetch(\n                  API_HOST +\n                    `/restaurant/edit-rest-min-price?id=${data.id}&value=${e.target.value}`\n                ).then((res) => getData())\n              }\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            <span>Юридиская информация (название ООО, адрес, телефон)</span>\n            <Input\n              value={restInfo}\n              onChange={(e) => setRestInfo(e.target.value)}\n            />\n            <Button\n              onClick={() => {\n                fetch(\n                  API_HOST +\n                    `/restaurant/edit-rest-info?id=${data.id}&value=${restInfo}`\n                ).then((res) => getData());\n              }}\n            >\n              Сохранить\n            </Button>\n          </label>\n          <br />\n          <br />\n          <Button\n            onClick={() => {\n              fetch(\n                API_HOST +\n                  `/restaurant/edit-rest-active?id=${data.id}&value=${\n                    data.active == \"1\" ? 0 : 1\n                  }`\n              ).then((res) => getData());\n            }}\n          >\n            Ресторан {data.active == \"1\" ? \"открыт\" : \"закрыт\"} (нажмите чтобы{\" \"}\n            {data.active == \"1\" ? \"закрыть\" : \"открыть\"})\n          </Button>\n          <br />\n          <br />\n          <Link\n            to={{\n              pathname: \"restaurant-discount\",\n              state: { id: id },\n            }}\n          >\n            <Button>Скидки, акции и промокоды</Button>\n          </Link>\n          <br />\n          <br />\n          <label>\n            <span>Загрузить новое изображение</span>\n            <input\n              type=\"file\"\n              onChange={(e) => {\n                let formData = new FormData();\n                formData.append(\"file\", e.target.files[0]);\n                fetch(\n                  API_HOST + `/restaurant/change-rest-image?id=${data.id}`,\n                  {\n                    method: \"POST\",\n                    body: formData,\n                  }\n                ).then((res) => getData());\n              }}\n            />\n          </label>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\nconst { Panel } = Collapse;\n\nexport const RestaurantMenu = (props) => {\n  const [data, setData] = useState(null);\n  console.log(\"data is\", data);\n  const { id } = props.location.state;\n  const [newCategoryValue, setNewCategoryValue] = useState(false);\n\n  const getMenu = () => {\n    const data = new FormData();\n    data.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/get-menu\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setData(res);\n      });\n  };\n\n  useEffect(() => {\n    getMenu();\n  }, []);\n\n  const createCategory = () => {\n    const data = new FormData();\n    data.append(\"rest_id\", id);\n    data.append(\"category_name\", newCategoryValue);\n    fetch(API_HOST + \"/restaurant/create-category-menu\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((res) => getMenu());\n  };\n\n  const [newItem, setNewItem] = useState(false);\n  const saveItem = () => {\n    const formData = new FormData();\n    let input = document.querySelector(\"#new_item_image\");\n    console.log(\"data is \", data);\n    formData.append(\n      \"category_id\",\n      newItem.category_id ? newItem.category_id : data.menu[0].id\n    );\n    formData.append(\"description\", newItem.description);\n    formData.append(\"name\", newItem.name);\n    formData.append(\"price\", newItem.price);\n    formData.append(\"weight\", newItem.weight);\n    formData.append(\"file\", input.files[0]);\n    formData.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/add-item\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"успешно добавлено\");\n          getMenu();\n          // setNewItem({});\n        } else {\n          alert(\"не удалось добавить блюдо\");\n          getMenu();\n        }\n      });\n  };\n  console.log(\"newItem\", newItem);\n  return (\n    <>\n      <Link to={{ pathname: \"restaurant-modif\", state: { id: id } }}>\n        <Button>Редактировать модификаторы</Button>\n      </Link>\n      <Divider />\n      <Input onChange={(e) => setNewCategoryValue(e.target.value)} />\n      <Button onClick={createCategory}>Добавить категорию</Button>\n      <Divider />\n      {data && data.menu && (\n        <div>\n          <h3>Добавление блюда</h3>\n          <label>\n            <span>Категория</span>\n            <select\n              style={{ width: \"100%\", height: 40 }}\n              value={newItem.category_id}\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  category_id: e.target.value,\n                })\n              }\n            >\n              {data.menu.map((cat) => (\n                <option key={cat.id} value={cat.id}>\n                  {cat.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <label>\n            <span>Название</span>\n            <Input\n              onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\n            />\n          </label>\n          <br />\n          <label>\n            <span>Описание</span>\n            <Input\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  description: e.target.value,\n                })\n              }\n            />\n          </label>\n          <br />\n          <label>\n            <span>Вес (гр)</span>\n            <Input\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  weight: e.target.value,\n                })\n              }\n            />\n          </label>\n          <br />\n          <label>\n            <span>Цена (руб)</span>\n            <Input\n              onChange={(e) =>\n                setNewItem({\n                  ...newItem,\n                  price: e.target.value,\n                })\n              }\n            />\n          </label>\n          <br />\n          <label>\n            <span>Изображение</span>\n            <Input\n              type=\"file\"\n              id=\"new_item_image\"\n              value={newItem.file}\n              onChange={(e) => setNewItem({ ...newItem, file: e.target.value })}\n            />\n            <button\n              onClick={() => {\n                document.querySelector(\"#new_item_image\").value = \"\";\n                document\n                  .querySelector(\"#new_item_image\")\n                  .dispatchEvent(new Event(\"change\"));\n                setNewItem({ ...newItem, file: undefined });\n              }}\n              style={{ padding: 5 }}\n            >\n              сбросить выбор изображения\n            </button>\n          </label>\n          <br />\n          <Button onClick={saveItem} style={{ marginTop: 20 }}>\n            Сохранить\n          </Button>\n        </div>\n      )}\n      <Divider />\n      {data &&\n        data.menu.length &&\n        data.menu.map((category) => {\n          return (\n            <div key={category.id}>\n              <h3\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                {category.name}\n                <div>\n                  <Input\n                    placeholder=\"сортировка\"\n                    value={category.order_by}\n                    style={{ width: 150 }}\n                    onChange={(e) => {\n                      fetch(\n                        API_HOST +\n                          `/restaurant/change-rest-category-order?id=${category.id}&value=${e.target.value}`\n                      ).then((res) => getMenu());\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      if (window.confirm(\"Подтвердите удаление категории\")) {\n                        fetch(\n                          API_HOST +\n                            `/restaurant/delete-rest-category?id=${category.id}`\n                        ).then((res) => getMenu());\n                      }\n                    }}\n                  >\n                    Удалить\n                  </Button>\n                </div>\n              </h3>\n              <div>\n                <Collapse defaultActiveKey={[]}>\n                  <Panel header=\"Меню категории\" key=\"1\">\n                    {category.menu.map((item) => {\n                      return (\n                        <Collapse key={item.id} defaultActiveKey={[]}>\n                          <Panel header={item.name} key=\"1\">\n                            <div\n                              style={{\n                                margin: 15,\n                              }}\n                            >\n                              <Card>\n                                <label>\n                                  <span>Название - {item.name}</span>\n                                  <Input\n                                    placeholder=\"Новое название\"\n                                    onChange={(e) => {\n                                      fetch(\n                                        API_HOST +\n                                          `/restaurant/change-item?id=${item.id}&key=name&value=${e.target.value}`\n                                      ).then((res) => getMenu());\n                                    }}\n                                  />\n                                </label>\n                                <img\n                                  src={API_HOST + \"/\" + item.image}\n                                  style={{\n                                    maxWidth: 300,\n                                  }}\n                                />\n                                <input\n                                  type=\"file\"\n                                  onChange={(e) => {\n                                    let data = new FormData();\n                                    data.append(\"file\", e.target.files[0]);\n                                    fetch(\n                                      API_HOST +\n                                        `/restaurant/change-item-image?id=${item.id}\n                                                                        `,\n                                      {\n                                        method: \"POST\",\n                                        body: data,\n                                      }\n                                    ).then((res) => getMenu());\n                                  }}\n                                />\n                                <p>\n                                  <label>\n                                    <span>Описание - {item.description}</span>\n                                    <Input\n                                      placeholder=\"Новое описание\"\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=description&value=${e.target.value}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span> Вес - {item.weight} гр</span>\n                                    <Input\n                                      placeholder=\"Новый вес\"\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=weight&value=${e.target.value}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>Цена - {item.price} руб</span>\n                                    <Input\n                                      placeholder=\"Новый вес\"\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=price&value=${e.target.value}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>\n                                      {item.active ? \"активно\" : \"не активно\"}\n                                    </span>\n                                    <input\n                                      type=\"checkbox\"\n                                      checked={item.active}\n                                      onChange={(e) => {\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${\n                                              item.id\n                                            }&key=active&value=${\n                                              e.target.checked ? 1 : 0\n                                            }`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    />\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>Модификаторы</span>\n                                    <select\n                                      multiple\n                                      value={\n                                        item.modificators\n                                          ? item.modificators.split(\",\")\n                                          : []\n                                      }\n                                      style={{\n                                        width: \"100%\",\n                                      }}\n                                      onChange={(e) => {\n                                        const val = [...e.target.options]\n                                          .filter((x) => x.selected)\n                                          .map((x) => x.value);\n                                        fetch(\n                                          API_HOST +\n                                            `/restaurant/change-item?id=${item.id}&key=modificators&value=${val}`\n                                        ).then((res) => getMenu());\n                                      }}\n                                    >\n                                      {data.modificators.map((modif) => {\n                                        return (\n                                          <option\n                                            key={modif.id}\n                                            value={modif.id}\n                                          >\n                                            {modif.name}\n                                          </option>\n                                        );\n                                      })}\n                                    </select>\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <span>Удалить блюдо </span>\n                                    <Button\n                                      onClick={(e) => {\n                                        if (\n                                          window.confirm(\"Подтвердите удаление\")\n                                        ) {\n                                          fetch(\n                                            API_HOST +\n                                              `/restaurant/delete-item?id=${item.id}`\n                                          ).then((res) => getMenu());\n                                        }\n                                      }}\n                                    >\n                                      Удалить\n                                    </Button>\n                                  </label>\n                                </p>\n                              </Card>\n                            </div>\n                          </Panel>\n                        </Collapse>\n                      );\n                    })}\n                  </Panel>\n                </Collapse>\n              </div>\n              <Divider />\n            </div>\n          );\n        })}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantModif = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"single\" });\n\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-modif-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"name\", newModif.name);\n        data.append(\"type\", newModif.type);\n        data.append(\n            \"parent_id\",\n            newModif.parent_id ? newModif.parent_id : null\n        );\n        fetch(API_HOST + \"/restaurant/create-rest-modif\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    return (\n        <>\n            <div>Модификаторы ресторана</div>\n            <Link to={{pathname: \"restaurant\", state: {id}}}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Название</span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, name: e.target.value })\n                    }\n                />\n            </label>\n            <label>\n                <span>Тип</span>\n                <select\n                    style={{ width: \"100%\", height: 40, marginBottom: 10 }}\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, type: e.target.value })\n                    }\n                >\n                    <option value=\"single\">Одиночный выбор из списка</option>\n                    <option value=\"multiple\">\n                        Множественный выбор из списка\n                    </option>\n                </select>\n            </label>\n            <Button onClick={createModif}>Добавить модификатор</Button>\n            <Divider />\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                }}\n                            >\n                                <h3>{modif.name}</h3>\n                                <Button onClick={() => deleteModif(modif.id)}>\n                                    Удалить\n                                </Button>\n                            </div>\n                            <br />\n                            <form id={\"form\" + modif.id}>\n                                <Input name=\"name\" placeholder=\"Название\" />\n                                <Input name=\"price\" placeholder=\"Цена\" />\n                                <Input\n                                    name=\"rest_id\"\n                                    type=\"hidden\"\n                                    value={id}\n                                />\n                                <Input\n                                    name=\"parent_id\"\n                                    type=\"hidden\"\n                                    value={modif.id}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        const formData = new FormData(\n                                            document.getElementById(\n                                                \"form\" + modif.id\n                                            )\n                                        );\n                                        fetch(\n                                            API_HOST +\n                                                \"/restaurant/create-rest-modif-variant\",\n                                            {\n                                                method: \"POST\",\n                                                body: formData,\n                                            }\n                                        )\n                                            .then((res) => res.json())\n                                            .then((res) => {\n                                                getData();\n                                                // setNewModif({type: \"single\"})\n                                            });\n                                    }}\n                                >\n                                    Добавить вариант\n                                </Button>\n                            </form>\n                            <br />\n                            {modif.list.map((el) => {\n                                return (\n                                    <Card key={el.id}>\n                                        <div\n                                            style={{\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                justifyContent: \"space-between\",\n                                            }}\n                                        >\n                                            <p>{el.name}</p>\n                                            <span>\n                                                <span>{el.price} руб</span>\n                                                <Button\n                                                    onClick={() =>\n                                                        deleteModif(el.id)\n                                                    }\n                                                    style={{ marginLeft: 20 }}\n                                                >\n                                                    Удалить\n                                                </Button>\n                                            </span>\n                                        </div>\n                                    </Card>\n                                );\n                            })}\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantDelivery = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"single\" });\n\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-delivery-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"price\", newModif.price);\n        data.append(\"price_start\", newModif.price_start);\n        fetch(API_HOST + \"/restaurant/create-rest-delivery\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    return (\n        <>\n            <div>Доставка ресторана</div>\n            <Link to={{ pathname: \"restaurant\", state: { id } }}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Заказ от</span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({\n                            ...newModif,\n                            price_start: e.target.value,\n                        })\n                    }\n                />\n            </label>\n            <label>\n                <span>Стоимость доставки </span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, price: e.target.value })\n                    }\n                />\n            </label>\n            <Button onClick={createModif}>Добавить доставку</Button>\n            <Divider />\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                }}\n                            >\n                                <label style={{ flex: 1 }}>\n                                    <span>Заказ от</span>\n                                    <Input\n                                        value={modif.price_start}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/edit-delivery?id=${modif.id}&key=price_start&value=${e.target.value}`\n                                            ).then((res) => getData());\n                                        }}\n                                    />\n                                </label>\n                                <label style={{ flex: 1, padding: 20 }}>\n                                    <span>Стоимость доставки</span>\n                                    <Input\n                                        value={modif.price}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/edit-delivery?id=${modif.id}&key=price&value=${e.target.value}`\n                                            ).then((res) => getData());\n                                        }}\n                                    />\n                                </label>\n                                <div>\n                                    {/* <label>&nbsp;</label> */}\n                                    <br></br>\n                                    <Button\n                                        onClick={() => {\n                                            if (\n                                                window.confirm(\n                                                    \"Подтвердите удаление\"\n                                                )\n                                            ) {\n                                                fetch(\n                                                    API_HOST +\n                                                        `/restaurant/delete-delivery?id=${modif.id}`\n                                                ).then((res) => getData());\n                                            }\n                                        }}\n                                    >\n                                        Удалить\n                                    </Button>\n                                </div>\n                            </div>\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantDiscount = (props) => {\n  const [data, setData] = useState(null);\n  const { id } = props.location.state;\n  const [newModif, setNewModif] = useState({ type: \"promocode\" });\n  const [menu, setMenu] = useState([]);\n  const types = [\n    { value: \"promocode\", name: \"Промокод\" },\n    { value: \"hours\", name: \"Скидка в счастливые часы\" },\n    { value: \"one_plus_one\", name: \"Скидка 1 + 1\" },\n  ];\n  const getData = () => {\n    fetch(API_HOST + \"/restaurant/get-discount-list?restaurant_id=\" + id)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n      });\n  };\n  useEffect(() => {\n    getData();\n    const formData = new FormData();\n    formData.append(\"rest_id\", id);\n    fetch(API_HOST + \"/restaurant/get-menu\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((res) => setMenu(res.menu));\n    //es\n  }, []);\n  const createModif = () => {\n    const data = new FormData();\n    data.append(\"rest_id\", id);\n    data.append(\"type\", newModif.type ? newModif.type : \"\");\n    data.append(\"name\", newModif.name ? newModif.name : \"\");\n    data.append(\n      \"discount_value\",\n      newModif.discount_value ? newModif.discount_value : \"\"\n    );\n    data.append(\n      \"price_start\",\n      newModif.price_start ? newModif.price_start : \"\"\n    );\n    data.append(\n      \"description\",\n      newModif.description ? newModif.description : \"\"\n    );\n    data.append(\"promocode\", newModif.promocode ? newModif.promocode : \"\");\n    data.append(\"time_start\", newModif.time_start ? newModif.time_start : \"\");\n    data.append(\"time_end\", newModif.time_end ? newModif.time_end : \"\");\n    data.append(\"items\", newModif.items ? newModif.items : \"\");\n    fetch(API_HOST + \"/restaurant/create-rest-discount\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        getData();\n        // setNewModif({type: \"single\"})\n      });\n  };\n\n  const deleteModif = (modifId) => {\n    if (window.confirm(\"Подтверждение удаления\")) {\n      fetch(\n        API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n      ).then((res) => getData());\n    }\n  };\n  console.log(\"data\", data);\n  console.log(\"newModif\", newModif);\n  console.log(\"menu\", menu);\n  const renderInput = (label, name) => {\n    const key = name;\n    return (\n      <label>\n        <span>{label}</span>\n        <Input\n          onChange={(e) => {\n            const modif = { ...newModif };\n            modif[key] = e.target.value;\n            setNewModif({ ...modif });\n          }}\n        />\n      </label>\n    );\n  };\n  const renderInputEdit = (id, label, name, value) => {\n    return (\n      <label>\n        <span>{label}</span>\n        <Input\n          value={value}\n          onChange={(e) => {\n            fetch(\n              API_HOST +\n                `/restaurant/edit-discount?id=${id}&key=${name}&value=${e.target.value}`\n            ).then((res) => getData());\n          }}\n        />\n      </label>\n    );\n  };\n  return (\n    <>\n      <div>Скидки, акции и промокоды</div>\n      <Link to={{ pathname: \"restaurant\", state: { id } }}>\n        <Button>Назад в меню</Button>\n      </Link>\n      <Divider />\n      <label>\n        <span>Тип скидки</span>\n        <select\n          style={{ width: \"100%\", height: 40 }}\n          onChange={(e) => {\n            setNewModif({ ...newModif, type: e.target.value });\n          }}\n        >\n          {types.map((type) => {\n            return (\n              <option key={type.value} value={type.value}>\n                {type.name}\n              </option>\n            );\n          })}\n        </select>\n      </label>\n      <br />\n      {renderInput(\"Название\", \"name\")}\n      <br />\n      {renderInput(\"Описание\", \"description\")}\n      <br />\n      {renderInput(\"Промокод\", \"promocode\")}\n      <br />\n      {renderInput(\n        \"Значение скидки (например 300 р или 20 %  - через пробел)\",\n        \"discount_value\"\n      )}\n      <br />\n      {renderInput(\"Заказ от (р)\", \"price_start\")}\n      <br />\n      {renderInput(\"Время начала действия (чч:мм)\", \"time_start\")}\n      <br />\n      {renderInput(\"Время окончания действия (чч:мм)\", \"time_end\")}\n      <br />\n      <label>\n        <span>На какие блюда распространяется</span>\n        <select\n          multiple\n          style={{ width: \"100%\" }}\n          onChange={(e) => {\n            const val = [...e.target.options]\n              .filter((x) => x.selected)\n              .map((x) => x.value);\n            setNewModif({ ...newModif, items: val });\n          }}\n        >\n          {menu.map((m) => {\n            return (\n              <optgroup label={m.name}>\n                {m.menu.map((item) => {\n                  return <option value={item.id}>{item.name}</option>;\n                })}\n              </optgroup>\n            );\n          })}\n        </select>\n      </label>\n      <br />\n      <br />\n      <Button onClick={createModif}>Добавить акцию</Button>\n      <Divider />\n      <h3>Список акций</h3>\n      {data &&\n        data.length &&\n        data.map((modif) => {\n          return (\n            <div key={modif.id}>\n              <select\n                style={{ width: \"100%\", height: 40 }}\n                onChange={(e) => {\n                  fetch(\n                    API_HOST +\n                      `/restaurant/edit-discount?id=${modif.id}&key=type&value=${e.target.value}`\n                  ).then((res) => getData());\n                }}\n                value={modif.type}\n              >\n                {types.map((type) => {\n                  return (\n                    <option key={type.value} value={type.value}>\n                      {type.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <br />\n              {renderInputEdit(modif.id, \"Название\", \"name\", modif.name)}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Описание\",\n                \"description\",\n                modif.description\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Промокод\",\n                \"promocode\",\n                modif.promocode\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Значение скидки (например 300 р или 20 %  - через пробел)\",\n                \"discount_value\",\n                modif.discount_value\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Заказ от (р)\",\n                \"price_start\",\n                modif.price_start\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Время начала действия (чч:мм)\",\n                \"time_start\",\n                modif.time_start\n              )}\n              <br />\n              {renderInputEdit(\n                modif.id,\n                \"Время окончания действия (чч:мм)\",\n                \"time_end\",\n                modif.time_end\n              )}\n              <br />\n              <label>\n                <span>На какие блюда распространяется</span>\n                <select\n                  multiple\n                  style={{ width: \"100%\" }}\n                  value={modif.items ? modif.items.split(\",\") : []}\n                  onChange={(e) => {\n                    const val = [...e.target.options]\n                      .filter((x) => x.selected)\n                      .map((x) => x.value);\n                    fetch(\n                      API_HOST +\n                        `/restaurant/edit-discount?id=${modif.id}&key=items&value=${val}`\n                    ).then((res) => getData());\n                  }}\n                >\n                  {menu.map((m) => {\n                    return (\n                      <optgroup label={m.name}>\n                        {m.menu.map((item) => {\n                          return <option value={item.id}>{item.name}</option>;\n                        })}\n                      </optgroup>\n                    );\n                  })}\n                </select>\n              </label>\n              <br />\n              <br />\n              <Button\n                onClick={() => {\n                  if (window.confirm(\"Подтвердите удаление\")) {\n                    fetch(\n                      API_HOST + `/restaurant/delete-discount?id=${modif.id}`\n                    ).then((res) => getData());\n                  }\n                }}\n              >\n                Удалить акцию\n              </Button>\n              <Divider />\n            </div>\n          );\n        })}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  // Col,\n  // Row,\n  // Select,\n  Button,\n  Input,\n  Divider,\n  Table,\n  // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantOrder = (props) => {\n  const [data, setData] = useState([]);\n  const { id } = props.location.state;\n  const [newModif, setNewModif] = useState({ type: \"single\" });\n  const [loading, setLoading] = useState(false);\n  const getData = () => {\n    setLoading(true);\n    fetch(API_HOST + \"/restaurant/get-order-list?restaurant_id=\" + id)\n      .then((res) => res.json())\n      .then((res) => {\n        setLoading(false);\n        setData(res);\n      });\n  };\n  useEffect(() => {\n    getData();\n    //es\n  }, []);\n\n  console.log(\"data\", data);\n  let dataSource = data.map((row) => {\n    const userInfo = JSON.parse(row.user_info);\n    const address = JSON.parse(row.address_data);\n    const cartList = JSON.parse(row.cart_list);\n\n    return {\n      id: row.id,\n      user: `Телефон: ${userInfo.phone}${\"\\n\"} Имя: ${\n        userInfo.name\n      } Комментарий: ${userInfo.comment} `,\n      address: `${address.value} Квартира: ${userInfo?.flat} Подъезд: ${userInfo?.flat_p} Этаж: ${userInfo?.floor}`,\n      cartList: cartList?.map((cartItem) => {\n        return (\n          <p>\n            {cartItem.name} - {cartItem.count} шт\n            {!!cartItem.selectedModificatorsAll &&\n              !!cartItem.selectedModificatorsAll.length &&\n              !!Object.keys(cartItem.selectedModificatorsAll[0]).length && (\n                <p>\n                  <span>Дополнительно:</span>\n                  {cartItem.selectedModificatorsAll.map(\n                    (modificatorPart, index) => {\n                      let modificatorPartKey = Object.keys(modificatorPart)[0];\n                      let modificatorPartParent =\n                        modificatorPart[modificatorPartKey];\n                      if (modificatorPartParent && modificatorPartParent.name) {\n                        return (\n                          <p\n                            style={{\n                              paddingLeft: 10,\n                            }}\n                            key={index}\n                          >\n                            <span>{modificatorPartParent.name}</span>\n                            {modificatorPartParent.chosen_variants.map(\n                              (chosenVariant, index) => {\n                                return (\n                                  <p\n                                    key={index}\n                                    style={{\n                                      paddingLeft: 10,\n                                      flexDirection: \"row\",\n                                      alignItems: \"center\",\n                                      justifyContent: \"space-between\",\n                                    }}\n                                  >\n                                    <span>{chosenVariant.name}</span>\n                                    <span>{chosenVariant.price} руб</span>\n                                  </p>\n                                );\n                              }\n                            )}\n                          </p>\n                        );\n                      }\n                      return <></>;\n                    }\n                  )}\n                </p>\n              )}\n            <Divider />\n          </p>\n        );\n      }),\n      totalPrice: row.total_price,\n      deliveryPrice: row.delivery_price,\n      date: row.date_create,\n      payment_status: row.payment_status,\n    };\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getData();\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const columns = [\n    {\n      title: \"Номер\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"Заказчик\",\n      dataIndex: \"user\",\n      key: \"user\",\n    },\n    {\n      title: \"Адрес\",\n      dataIndex: \"address\",\n      key: \"address\",\n    },\n    {\n      title: \"Корзина\",\n      dataIndex: \"cartList\",\n      key: \"cartList\",\n    },\n    {\n      title: \"Стоимость заказа\",\n      dataIndex: \"totalPrice\",\n      key: \"totalPrice\",\n    },\n    {\n      title: \"Стоимость доставки\",\n      dataIndex: \"deliveryPrice\",\n      key: \"deliveryPrice\",\n    },\n    {\n      title: \"Дата\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    {\n      title: \"Дата\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    {\n      title: \"Статус оплаты\",\n      dataIndex: \"payment_status\",\n      key: \"payment_status\",\n    },\n  ];\n  return (\n    <>\n      <div>Заказы ресторана</div>\n      <Link to={{ pathname: \"restaurant\", state: { id } }}>\n        <Button>Назад в меню</Button>\n      </Link>\n      <Divider />\n      <Button onClick={() => getData()}>Обновить список</Button>\n      <Divider />\n      {loading && <p> Загрузка ... </p>}\n      <Divider />\n      <Table dataSource={dataSource} columns={columns} />;\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport { routes } from \"./pages\";\n\nexport const Routes = () => <>{renderRoutes(routes())}</>;\n","import { HomePage } from \"./HomePage\";\nimport { AddRest } from \"./AddRest\";\nimport { ListRest } from \"./ListRest\";\nimport { RestaurantPage } from \"./RestaurantPage\";\nimport { RestaurantMenu } from \"./RestaurantMenu\";\nimport { RestaurantModif } from \"./RestaurantModif\";\nimport { RestaurantDelivery } from \"./RestaurantDelivery\";\nimport { RestaurantDiscount } from \"./RestaurantDiscount\";\nimport { RestaurantOrder } from \"./RestaurantOrder\";\nexport const routes = () => [\n  {\n    path: \"/\",\n    exact: true,\n    component: HomePage,\n  },\n  {\n    path: \"/add-rest\",\n    component: AddRest,\n  },\n  {\n    path: \"/list-rest\",\n    component: ListRest,\n  },\n  {\n    path: \"/restaurant\",\n    component: RestaurantPage,\n  },\n  {\n    path: \"/restaurant-menu\",\n    component: RestaurantMenu,\n  },\n  {\n    path: \"/restaurant-modif\",\n    component: RestaurantModif,\n  },\n  {\n    path: \"/restaurant-delivery\",\n    component: RestaurantDelivery,\n  },\n  {\n    path: \"/restaurant-discount\",\n    component: RestaurantDiscount,\n  },\n  {\n    path: \"/restaurant-order\",\n    component: RestaurantOrder,\n  },\n];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { history } from \"./lib\";\nimport { App } from \"./app\";\nimport { store, persistor } from \"./lib\";\nconst root = document.querySelector(\"#root\");\nconst render = () => {\n    if (root) {\n        ReactDOM.render(\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <Router history={history}>\n                        <App />\n                    </Router>\n                </PersistGate>\n            </Provider>,\n            root\n        );\n    }\n};\n\nif (module.hot) {\n    module.hot.accept(\"./app\", render);\n}\n\nrender();\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n// import { sideBarReducer, categoriesReducer } from \"../../features\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { mainReducer } from \"./reducer\";\nconst persistConfig = {\n    key: \"main\",\n    storage,\n};\nconst rootReducer = combineReducers({\n    main: persistReducer(persistConfig, mainReducer),\n    // sidebar: sideBarReducer,\n    // categories: categoriesReducer,\n});\n\n// const persistedReducer =\n\nlet enhacers;\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n    enhacers = applyMiddleware(thunk, createLogger({ collapsed: true }));\n} else {\n    enhacers = applyMiddleware(thunk);\n}\n\nfunction configureStore() {\n    const store = createStore(rootReducer, undefined, enhacers);\n    return store;\n}\n\nexport const store = configureStore();\nexport const persistor = persistStore(store);\n","import { createBrowserHistory } from \"history\"\n\nexport const history = createBrowserHistory()","const initialState = {\n    user: undefined,\n};\nexport const mainReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user,\n            };\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n","export * from \"./theme\";\nexport * from \"./routing\";\nexport * from \"./store\";\nexport * from \"./links\";\nexport * from \"./containers\";\nexport const API_HOST =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://app.vegfood.delivery\"\n    : \"http://localhost:21080\";\n"],"sourceRoot":""}