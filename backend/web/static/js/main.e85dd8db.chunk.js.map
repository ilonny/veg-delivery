{"version":3,"sources":["app.js","global-styles.js","pages/HomePage/HomePage.js","pages/AddRest/AddRest.js","pages/ListRest/ListRest.js","pages/RestaurantPage/RestaurantPage.js","pages/RestaurantMenu/RestaurantMenu.js","pages/RestaurantModif/RestaurantModif.js","pages/RestaurantDelivery/RestaurantDelivery.js","pages/RestaurantDiscount/RestaurantDiscount.js","routes.js","pages/index.js","index.js","lib/store/index.js","lib/routing/index.js","lib/store/reducer.js","lib/index.js","lib/theme/index.js"],"names":["SubMenu","Menu","Header","Layout","Content","Sider","MainComp","connect","state","user","main","dispatch","setUser","type","props","style","flex","alignItems","justifyContent","minHeight","name","onFinish","values","console","log","data","FormData","append","login","password","fetch","API_HOST","method","body","then","res","json","status","alert","message","userInfo","Item","label","rules","required","htmlType","width","className","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","title","to","role","padding","App","hot","module","GlobalStyles","createGlobalStyle","Color","black","HomePage","layout","labelCol","span","wrapperCol","AddRest","useState","value","setValue","input","document","querySelector","Object","keys","forEach","JSON","stringify","files","headers","location","href","onFinishFailed","errorInfo","initialValues","active","AddressSuggestions","token","onChange","valuePropName","Meta","Card","ListRest","list","setList","useEffect","e","length","gutter","map","rest","addrText","parse","address_json","pathname","id","hoverable","cover","alt","src","image","description","RestaurantPage","setData","startTime","setStartTime","endTime","setEndTime","getData","time_start","time_end","delivery_radius","target","onClick","min_price","restaurant_info","Panel","Collapse","RestaurantMenu","newCategoryValue","setNewCategoryValue","getMenu","newItem","setNewItem","menu","category_id","cat","weight","price","file","formData","marginTop","category","display","placeholder","order_by","window","confirm","defaultActiveKey","header","item","margin","maxWidth","checked","multiple","modificators","split","val","options","filter","x","selected","modif","RestaurantModif","newModif","setNewModif","deleteModif","modifId","marginBottom","parent_id","getElementById","el","marginLeft","RestaurantDelivery","price_start","RestaurantDiscount","setMenu","types","renderInput","renderInputEdit","items","m","discount_value","promocode","Routes","renderRoutes","path","exact","component","root","ReactDOM","render","store","loading","persistor","history","enhacers","createBrowserHistory","initialState","undefined","persistConfig","storage","rootReducer","combineReducers","persistReducer","action","applyMiddleware","thunk","createStore","persistStore","red","gray","light_gray"],"mappings":"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","file":"static/js/main.e85dd8db.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { mainRedcuer } from \"./lib/store\";\nimport { hot } from \"react-hot-loader\";\nimport { Normalize } from \"styled-normalize\";\n\nimport { Routes } from \"./routes\";\nimport { GlobalStyles } from \"./global-styles\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Form, Input, Button } from \"antd\";\n\nimport { Link } from \"react-router-dom\";\nimport { API_HOST } from \"./lib\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst _MainComp = (props) => {\n    // console.log(\"props\", props);\n    const { user } = props;\n    if (!user) {\n        const onFinish = (values) => {\n            console.log(\"Success:\", values);\n            const data = new FormData();\n            data.append(\"login\", values.login);\n            data.append(\"password\", values.password);\n            fetch(API_HOST + \"/user/login\", {\n                method: \"POST\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((res) => {\n                    if (res.status === 403) {\n                        alert(res.message);\n                    }\n                    if (res.status === 200) {\n                        props.setUser(res.userInfo);\n                    }\n                });\n        };\n\n        return (\n            <>\n                <Layout\n                    style={{\n                        flex: 1,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        minHeight: \"100vh\",\n                    }}\n                >\n                    <Form name=\"basic\" onFinish={onFinish}>\n                        <Form.Item\n                            label=\"Логин\"\n                            name=\"login\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Обязательное поле\",\n                                },\n                            ]}\n                        >\n                            <Input type=\"text\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Пароль\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Обязательное поле\",\n                                },\n                            ]}\n                        >\n                            <Input type=\"password\" />\n                        </Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Войти\n                        </Button>\n                    </Form>\n                </Layout>\n            </>\n        );\n    }\n    return (\n        <>\n            <Normalize />\n            <GlobalStyles />\n            <Layout style={{ flex: 1 }}>\n                <Layout>\n                    <Header></Header>\n                </Layout>\n                <Layout>\n                    <Sider width={200} className=\"site-layout-background\">\n                        <Menu\n                            mode=\"inline\"\n                            defaultSelectedKeys={[]}\n                            defaultOpenKeys={[]}\n                            style={{ height: \"100%\", borderRight: 0 }}\n                        >\n                            <SubMenu key=\"sub1\" title=\"Рестораны\">\n                                <Menu.Item key=\"1\">\n                                    <Link to={\"/list-rest\"}>\n                                        Список ресторанов\n                                    </Link>\n                                </Menu.Item>\n                                {user.role === \"admin\" && (\n                                    <Menu.Item key=\"2\">\n                                        <Link to={\"/add-rest\"}>\n                                            Добавить ресторан\n                                        </Link>\n                                    </Menu.Item>\n                                )}\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: 30 }}>\n                        <Routes />\n                    </Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n};\n\nconst MainComp = connect(\n    (state) => ({\n        user: state.main.user,\n    }),\n    (dispatch) => ({\n        setUser: (user) => dispatch({ type: \"SET_USER\", user }),\n    })\n)(_MainComp);\n\nexport const App = hot(module)(() => (\n    <>\n        <MainComp />\n    </>\n));\n","import { createGlobalStyle } from \"styled-components\";\nimport { Color } from \"./lib/theme\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    font-family: \"Helvetica\", \"Open Sans\", sans-serif;\n    height: 100vh;\n    -webkit-font-smoothing: antialiased;\n    color: ${Color.black}\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  :root {\n    // font-size: 10px;\n  }\n  * {\n    box-sizing: border-box;\n    margin: 0px;\n    padding: 0px;\n    border-width: 0px;\n  }\n  body {\n  }\n\n  #root {\n  }\n\n  tt,\n  code,\n  kbd,\n  samp,\n  listing {\n  }\n`;\n","import React from \"react\";\n// import { Layout, Menu, Breadcrumb } from \"antd\";\n// import {\n//     UserOutlined,\n//     LaptopOutlined,\n//     NotificationOutlined,\n// } from \"@ant-design/icons\";\n\n// const { SubMenu } = Menu;\n// const { Header, Content, Sider } = Layout;\nexport const HomePage = () => (\n    <>\n        <p>Добро пожаловать</p>\n    </>\n);\n","import React, { useState } from \"react\";\nimport {\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    // Upload,\n    // Select,\n    // InputNumber,\n    // Switch,\n    // Radio,\n    // Slider,\n    // Rate,\n    // Row,\n    // Col,\n} from \"antd\";\nimport { AddressSuggestions } from \"react-dadata\";\nimport \"react-dadata/dist/react-dadata.css\";\nimport { API_HOST } from \"../../lib\";\n\nconst layout = {\n    labelCol: {\n        span: 4,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\n\n\nexport const AddRest = () => {\n    const onFinish = (values) => {\n        console.log(\"Success:\", { values, value });\n        let input = document.querySelector('input[type=\"file\"]');\n        let data = new FormData();\n        Object.keys(values).forEach((key) => {\n            if (key !== \"dragger\") {\n                data.append(\n                    key,\n                    key === \"address\"\n                        ? JSON.stringify(values[key])\n                        : values[key]\n                );\n            }\n        });\n        data.append(\"file\", input.files[0]);\n        // data.append(\"address\", JSON.stringify(value));\n        data.append(\"user\", \"hubot\");\n        fetch(API_HOST + \"/restaurant/add\", {\n            method: \"POST\",\n            body: data,\n            headers: {\n                // \"Content-Type\": \"application/json\",\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                alert(res.message);\n                if (res.status === 200) {\n                    document.location.href=\"/\";\n                } else {\n                }\n            });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n    const [value, setValue] = useState();\n    return (\n        <>\n            <Form\n                name=\"basic\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                style={{ minHeight: \"100vh\" }}\n                initialValues={{\n                    active: true,\n                }}\n                {...layout}\n            >\n                <Form.Item\n                    label=\"Название\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Обязательное поле\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Описание\" name=\"description\">\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Изобржаение\" name=\"file\">\n                    <Input type=\"file\" />\n                </Form.Item>\n                <Form.Item label=\"Адрес\" name=\"address\">\n                    <AddressSuggestions\n                        token=\"eadbc452286d23c7163b38989884d5ae40d08ade\"\n                        value={value}\n                        onChange={setValue}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Радиус доставки (км)\" name=\"delivery_radius\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"active\" valuePropName=\"checked\">\n                    <Checkbox>Активен</Checkbox>\n                </Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Сохранить\n                </Button>\n            </Form>\n        </>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Row, Col } from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\nconst { Meta } = Card;\nexport const ListRest = () => {\n    const [list, setList] = useState([]);\n    useEffect(() => {\n        try {\n            fetch(API_HOST + \"/restaurant/list?token=ZWmGuABp3N6\")\n                .then((res) => res.json())\n                .then((res) => setList(res));\n        } catch (e) {\n            console.log(e);\n        }\n    }, []);\n    // console.log(\"list is\", list);\n    return (\n        <>\n            {!list.length ? (\n                \"Загрузка\"\n            ) : (\n                <Row gutter={[16, 16]}>\n                    {list.map((rest) => {\n                        let addrText;\n                        try {\n                            addrText = JSON.parse(rest.address_json).value;\n                        } catch (e) {\n                            addrText = \"Не определено\";\n                        }\n                        return (\n                            <Link to={{pathname: '/restaurant', state: {id: rest.id}}} key={rest.id}>\n                                <Col\n                                    className=\"gutter-row\"\n                                    span={6}\n                                >\n                                    <Card\n                                        hoverable\n                                        style={{ width: 240 }}\n                                        cover={\n                                            <img\n                                                alt=\"\"\n                                                src={\n                                                    API_HOST + \"/\" + rest.image\n                                                }\n                                            />\n                                        }\n                                    >\n                                        <Meta\n                                            title={rest.name}\n                                            description={\n                                                rest.description +\n                                                \"\\n\" +\n                                                addrText\n                                            }\n                                        />\n                                    </Card>\n                                </Col>\n                            </Link>\n                        );\n                    })}\n                </Row>\n            )}\n        </>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Col, Row, Button, Input } from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\nexport const RestaurantPage = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [startTime, setStartTime] = useState(false);\n    const [endTime, setEndTime] = useState(false);\n    useEffect(() => {\n        getData();\n    }, [id]);\n    const getData = () => {\n        try {\n            fetch(API_HOST + \"/restaurant/get-data?id=\" + id)\n                .then((res) => res.json())\n                .then((res) => {\n                    setData(res);\n                    setStartTime(res.time_start);\n                    setEndTime(res.time_end);\n                });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    let addrText;\n    try {\n        addrText = JSON.parse(data.address_json).value;\n    } catch (e) {\n        addrText = \"Не определено\";\n    }\n    console.log(\"rest data\", data);\n\n    if (!data) return null;\n    // const reOpenRest = () => {};\n\n    const changeTime = () => {\n        fetch(\n            API_HOST +\n                `/restaurant/edit-rest-time?id=${data.id}&start=${startTime}&end=${endTime}`\n        )\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.status === 200) {\n                    alert(\"Успешно сохранено\");\n                }\n                getData();\n            });\n    };\n    return (\n        <>\n            <Row gutter={[16, 16]}>\n                <Col className=\"gutter-row\" span={10}>\n                    <Card\n                        hoverable\n                        style={{ width: \"100%\" }}\n                        cover={<img alt=\"\" src={API_HOST + \"/\" + data.image} />}\n                    >\n                        <Meta\n                            title={data.name}\n                            description={data.description}\n                        />\n                        <p>{addrText}</p>\n                        <p>Радиус доставки {data.delivery_radius} км</p>\n                    </Card>\n                </Col>\n                <Col className=\"gutter-row\" span={10}>\n                    <Link\n                        to={{ pathname: \"restaurant-menu\", state: { id: id } }}\n                    >\n                        <Button>Меню</Button>\n                    </Link>\n                    <br />\n                    <br />\n                    <Link\n                        to={{ pathname: \"restaurant-modif\", state: { id: id } }}\n                    >\n                        <Button>Модификаторы</Button>\n                    </Link>\n                    <br />\n                    <br />\n                    <label>\n                        <span>Радиус доставки (км)</span>\n                        <Input\n                            value={data.delivery_radius}\n                            onChange={(e) =>\n                                fetch(\n                                    API_HOST +\n                                        `/restaurant/edit-rest-radius?id=${data.id}&value=${e.target.value}`\n                                ).then((res) => getData())\n                            }\n                        />\n                    </label>\n                    <br />\n                    <br />\n                    <Link\n                        to={{\n                            pathname: \"restaurant-delivery\",\n                            state: { id: id },\n                        }}\n                    >\n                        <Button>Стоимость доставки</Button>\n                    </Link>\n                    <br></br>\n                    <br></br>\n                    <label>\n                        <span>Время открытия (чч:мм)</span>\n                        <Input\n                            value={startTime}\n                            onChange={(e) => setStartTime(e.target.value)}\n                        />\n                    </label>\n                    <label>\n                        <span>Время закрытия (чч:мм)</span>\n                        <Input\n                            value={endTime}\n                            onChange={(e) => setEndTime(e.target.value)}\n                        />\n                    </label>\n                    <br />\n                    <Button onClick={() => changeTime()}>\n                        Сохранить время\n                    </Button>\n\n                    <br />\n                    <br />\n                    <label>\n                        <span>Минимальная сумма заказа (руб)</span>\n                        <Input\n                            value={data.min_price}\n                            onChange={(e) =>\n                                fetch(\n                                    API_HOST +\n                                        `/restaurant/edit-rest-min-price?id=${data.id}&value=${e.target.value}`\n                                ).then((res) => getData())\n                            }\n                        />\n                    </label>\n                    <br />\n                    <br />\n                    <label>\n                        <span>\n                            Юридиская информация (название ООО, адрес, телефон)\n                        </span>\n                        <Input\n                            value={data.restaurant_info}\n                            onChange={(e) =>\n                                fetch(\n                                    API_HOST +\n                                        `/restaurant/edit-rest-info?id=${data.id}&value=${e.target.value}`\n                                ).then((res) => getData())\n                            }\n                        />\n                    </label>\n                    <br />\n                    <br />\n                    <Button\n                        onClick={() => {\n                            fetch(\n                                API_HOST +\n                                    `/restaurant/edit-rest-active?id=${\n                                        data.id\n                                    }&value=${data.active == \"1\" ? 0 : 1}`\n                            ).then((res) => getData());\n                        }}\n                    >\n                        Ресторан {data.active == \"1\" ? \"открыт\" : \"закрыт\"}{\" \"}\n                        (нажмите чтобы{\" \"}\n                        {data.active == \"1\" ? \"закрыть\" : \"открыть\"})\n                    </Button>\n                    <br />\n                    <br />\n                    <Link\n                        to={{\n                            pathname: \"restaurant-discount\",\n                            state: { id: id },\n                        }}\n                    >\n                        <Button>Скидки, акции и промокоды</Button>\n                    </Link>\n                </Col>\n            </Row>\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\nconst { Panel } = Collapse;\n\nexport const RestaurantMenu = (props) => {\n    const [data, setData] = useState(null);\n    console.log('data is', data)\n    const { id } = props.location.state;\n    const [newCategoryValue, setNewCategoryValue] = useState(false);\n\n    const getMenu = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        fetch(API_HOST + \"/restaurant/get-menu\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n                setData(res);\n            });\n    };\n\n    useEffect(() => {\n        getMenu();\n    }, []);\n\n    const createCategory = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"category_name\", newCategoryValue);\n        fetch(API_HOST + \"/restaurant/create-category-menu\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => getMenu());\n    };\n\n    const [newItem, setNewItem] = useState(false);\n    const saveItem = () => {\n        const formData = new FormData();\n        let input = document.querySelector(\"#new_item_image\");\n        console.log(\"data is \", data);\n        formData.append(\n            \"category_id\",\n            newItem.category_id ? newItem.category_id : data.menu[0].id\n        );\n        formData.append(\"description\", newItem.description);\n        formData.append(\"name\", newItem.name);\n        formData.append(\"price\", newItem.price);\n        formData.append(\"weight\", newItem.weight);\n        formData.append(\"file\", input.files[0]);\n        formData.append(\"rest_id\", id);\n        fetch(API_HOST + \"/restaurant/add-item\", {\n            method: \"POST\",\n            body: formData,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.status === 200) {\n                    alert(\"успешно добавлено\");\n                    getMenu();\n                    setNewItem(false);\n                } else {\n                    alert(\"не удалось добавить блюдо\");\n                    getMenu();\n                }\n            });\n    };\n    console.log(\"newItem\", newItem);\n    return (\n        <>\n            <Link to={{ pathname: \"restaurant-modif\", state: { id: id } }}>\n                <Button>Редактировать модификаторы</Button>\n            </Link>\n            <Divider />\n            <Input onChange={(e) => setNewCategoryValue(e.target.value)} />\n            <Button onClick={createCategory}>Добавить категорию</Button>\n            <Divider />\n            {data && data.menu && (\n                <div>\n                    <h3>Добавление блюда</h3>\n                    <label>\n                        <span>Категория</span>\n                        <select\n                            style={{ width: \"100%\", height: 40 }}\n                            onChange={(e) =>\n                                setNewItem({\n                                    ...newItem,\n                                    category_id: e.target.value,\n                                })\n                            }\n                        >\n                            {data.menu.map((cat) => (\n                                <option key={cat.id} value={cat.id}>\n                                    {cat.name}\n                                </option>\n                            ))}\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        <span>Название</span>\n                        <Input\n                            onChange={(e) =>\n                                setNewItem({ ...newItem, name: e.target.value })\n                            }\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        <span>Описание</span>\n                        <Input\n                            onChange={(e) =>\n                                setNewItem({\n                                    ...newItem,\n                                    description: e.target.value,\n                                })\n                            }\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        <span>Вес (гр)</span>\n                        <Input\n                            onChange={(e) =>\n                                setNewItem({\n                                    ...newItem,\n                                    weight: e.target.value,\n                                })\n                            }\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        <span>Цена (руб)</span>\n                        <Input\n                            onChange={(e) =>\n                                setNewItem({\n                                    ...newItem,\n                                    price: e.target.value,\n                                })\n                            }\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        <span>Изображение</span>\n                        <Input\n                            type=\"file\"\n                            id=\"new_item_image\"\n                            onChange={(e) =>\n                                setNewItem({ ...newItem, file: e.target.value })\n                            }\n                        />\n                    </label>\n                    <br />\n                    <Button onClick={saveItem} style={{ marginTop: 20 }}>\n                        Сохранить\n                    </Button>\n                </div>\n            )}\n            <Divider />\n            {data &&\n                data.menu.length &&\n                data.menu.map((category) => {\n                    return (\n                        <div key={category.id}>\n                            <h3\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-between\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                {category.name}\n                                <div>\n                                    <Input\n                                        placeholder=\"сортировка\"\n                                        value={category.order_by}\n                                        style={{ width: 150 }}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/change-rest-category-order?id=${category.id}&value=${e.target.value}`\n                                            ).then((res) => getMenu());\n                                        }}\n                                    />\n                                    <Button\n                                        onClick={() => {\n                                            if (\n                                                window.confirm(\n                                                    \"Подтвердите удаление категории\"\n                                                )\n                                            ) {\n                                                fetch(\n                                                    API_HOST +\n                                                        `/restaurant/delete-rest-category?id=${category.id}`\n                                                ).then((res) => getMenu());\n                                            }\n                                        }}\n                                    >\n                                        Удалить\n                                    </Button>\n                                </div>\n                            </h3>\n                            <div>\n                                <Collapse defaultActiveKey={[]}>\n                                    <Panel header=\"Меню категории\" key=\"1\">\n                                        {category.menu.map((item) => {\n                                            return (\n                                                <Collapse\n                                                    key={item.id}\n                                                    defaultActiveKey={[]}\n                                                >\n                                                    <Panel\n                                                        header={item.name}\n                                                        key=\"1\"\n                                                    >\n                                                        <div\n                                                            style={{\n                                                                margin: 15,\n                                                            }}\n                                                        >\n                                                            <Card>\n                                                                <label>\n                                                                    <span>\n                                                                        Название\n                                                                        -{\" \"}\n                                                                        {\n                                                                            item.name\n                                                                        }\n                                                                    </span>\n                                                                    <Input\n                                                                        placeholder=\"Новое название\"\n                                                                        onChange={(\n                                                                            e\n                                                                        ) => {\n                                                                            fetch(\n                                                                                API_HOST +\n                                                                                    `/restaurant/change-item?id=${item.id}&key=name&value=${e.target.value}`\n                                                                            ).then(\n                                                                                (\n                                                                                    res\n                                                                                ) =>\n                                                                                    getMenu()\n                                                                            );\n                                                                        }}\n                                                                    />\n                                                                </label>\n                                                                <img\n                                                                    src={\n                                                                        API_HOST +\n                                                                        \"/\" +\n                                                                        item.image\n                                                                    }\n                                                                    style={{\n                                                                        maxWidth: 300,\n                                                                    }}\n                                                                />\n                                                                <input\n                                                                    type=\"file\"\n                                                                    onChange={(\n                                                                        e\n                                                                    ) => {\n                                                                        let data = new FormData();\n                                                                        data.append(\n                                                                            \"file\",\n                                                                            e\n                                                                                .target\n                                                                                .files[0]\n                                                                        );\n                                                                        fetch(\n                                                                            API_HOST +\n                                                                                `/restaurant/change-item-image?id=${item.id}\n                                                                        `,\n                                                                            {\n                                                                                method:\n                                                                                    \"POST\",\n                                                                                body: data,\n                                                                            }\n                                                                        ).then(\n                                                                            (\n                                                                                res\n                                                                            ) =>\n                                                                                getMenu()\n                                                                        );\n                                                                    }}\n                                                                />\n                                                                <p>\n                                                                    <label>\n                                                                        <span>\n                                                                            Описание\n                                                                            -{\" \"}\n                                                                            {\n                                                                                item.description\n                                                                            }\n                                                                        </span>\n                                                                        <Input\n                                                                            placeholder=\"Новое описание\"\n                                                                            onChange={(\n                                                                                e\n                                                                            ) => {\n                                                                                fetch(\n                                                                                    API_HOST +\n                                                                                        `/restaurant/change-item?id=${item.id}&key=description&value=${e.target.value}`\n                                                                                ).then(\n                                                                                    (\n                                                                                        res\n                                                                                    ) =>\n                                                                                        getMenu()\n                                                                                );\n                                                                            }}\n                                                                        />\n                                                                    </label>\n                                                                </p>\n                                                                <p>\n                                                                    <label>\n                                                                        <span>\n                                                                             Вес\n                                                                            -{\" \"}\n                                                                            {\n                                                                                item.weight\n                                                                            }{\" \"}\n                                                                            гр\n                                                                        </span>\n                                                                        <Input\n                                                                            placeholder=\"Новый вес\"\n                                                                            onChange={(\n                                                                                e\n                                                                            ) => {\n                                                                                fetch(\n                                                                                    API_HOST +\n                                                                                        `/restaurant/change-item?id=${item.id}&key=weight&value=${e.target.value}`\n                                                                                ).then(\n                                                                                    (\n                                                                                        res\n                                                                                    ) =>\n                                                                                        getMenu()\n                                                                                );\n                                                                            }}\n                                                                        />\n                                                                    </label>\n                                                                </p>\n                                                                <p>\n                                                                    <label>\n                                                                        <span>\n                                                                            Цена\n                                                                            -{\" \"}\n                                                                            {\n                                                                                item.price\n                                                                            }{\" \"}\n                                                                            руб\n                                                                        </span>\n                                                                        <Input\n                                                                            placeholder=\"Новый вес\"\n                                                                            onChange={(\n                                                                                e\n                                                                            ) => {\n                                                                                fetch(\n                                                                                    API_HOST +\n                                                                                        `/restaurant/change-item?id=${item.id}&key=price&value=${e.target.value}`\n                                                                                ).then(\n                                                                                    (\n                                                                                        res\n                                                                                    ) =>\n                                                                                        getMenu()\n                                                                                );\n                                                                            }}\n                                                                        />\n                                                                    </label>\n                                                                </p>\n                                                                <p>\n                                                                    <label>\n                                                                        <span>\n                                                                            {item.active\n                                                                                ? \"активно\"\n                                                                                : \"не активно\"}\n                                                                        </span>\n                                                                        <input\n                                                                            type=\"checkbox\"\n                                                                            checked={\n                                                                                item.active\n                                                                            }\n                                                                            onChange={(\n                                                                                e\n                                                                            ) => {\n                                                                                fetch(\n                                                                                    API_HOST +\n                                                                                        `/restaurant/change-item?id=${\n                                                                                            item.id\n                                                                                        }&key=active&value=${\n                                                                                            e\n                                                                                                .target\n                                                                                                .checked\n                                                                                                ? 1\n                                                                                                : 0\n                                                                                        }`\n                                                                                ).then(\n                                                                                    (\n                                                                                        res\n                                                                                    ) =>\n                                                                                        getMenu()\n                                                                                );\n                                                                            }}\n                                                                        />\n                                                                    </label>\n                                                                </p>\n                                                                <p>\n                                                                    <label>\n                                                                        <span>\n                                                                            Модификаторы\n                                                                        </span>\n                                                                        <select\n                                                                            multiple\n                                                                            value={item.modificators ? item.modificators.split(',') : []}\n                                                                            style={{\n                                                                                width:\n                                                                                    \"100%\",\n                                                                            }}\n                                                                            onChange={(\n                                                                                e\n                                                                            ) => {\n                                                                                const val = [\n                                                                                    ...e\n                                                                                        .target\n                                                                                        .options,\n                                                                                ]\n                                                                                    .filter(\n                                                                                        (\n                                                                                            x\n                                                                                        ) =>\n                                                                                            x.selected\n                                                                                    )\n                                                                                    .map(\n                                                                                        (\n                                                                                            x\n                                                                                        ) =>\n                                                                                            x.value\n                                                                                    );\n                                                                                fetch(\n                                                                                    API_HOST +\n                                                                                        `/restaurant/change-item?id=${item.id}&key=modificators&value=${val}`\n                                                                                ).then(\n                                                                                    (\n                                                                                        res\n                                                                                    ) =>\n                                                                                        getMenu()\n                                                                                );\n                                                                            }}\n                                                                        >\n                                                                            {data.modificators.map(\n                                                                                (\n                                                                                    modif\n                                                                                ) => {\n                                                                                    return (\n                                                                                        <option\n                                                                                            key={\n                                                                                                modif.id\n                                                                                            }\n                                                                                            value={\n                                                                                                modif.id\n                                                                                            }\n                                                                                            \n                                                                                        >\n                                                                                            {\n                                                                                                modif.name\n                                                                                            }\n                                                                                        </option>\n                                                                                    );\n                                                                                }\n                                                                            )}\n                                                                        </select>\n                                                                    </label>\n                                                                </p>\n                                                            </Card>\n                                                        </div>\n                                                    </Panel>\n                                                </Collapse>\n                                            );\n                                        })}\n                                    </Panel>\n                                </Collapse>\n                            </div>\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantModif = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"single\" });\n\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-modif-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"name\", newModif.name);\n        data.append(\"type\", newModif.type);\n        data.append(\n            \"parent_id\",\n            newModif.parent_id ? newModif.parent_id : null\n        );\n        fetch(API_HOST + \"/restaurant/create-rest-modif\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    return (\n        <>\n            <div>Модификаторы ресторана</div>\n            <Link to={{pathname: \"restaurant\", state: {id}}}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Название</span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, name: e.target.value })\n                    }\n                />\n            </label>\n            <label>\n                <span>Тип</span>\n                <select\n                    style={{ width: \"100%\", height: 40, marginBottom: 10 }}\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, type: e.target.value })\n                    }\n                >\n                    <option value=\"single\">Одиночный выбор из списка</option>\n                    <option value=\"multiple\">\n                        Множественный выбор из списка\n                    </option>\n                </select>\n            </label>\n            <Button onClick={createModif}>Добавить модификатор</Button>\n            <Divider />\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                }}\n                            >\n                                <h3>{modif.name}</h3>\n                                <Button onClick={() => deleteModif(modif.id)}>\n                                    Удалить\n                                </Button>\n                            </div>\n                            <br />\n                            <form id={\"form\" + modif.id}>\n                                <Input name=\"name\" placeholder=\"Название\" />\n                                <Input name=\"price\" placeholder=\"Цена\" />\n                                <Input\n                                    name=\"rest_id\"\n                                    type=\"hidden\"\n                                    value={id}\n                                />\n                                <Input\n                                    name=\"parent_id\"\n                                    type=\"hidden\"\n                                    value={modif.id}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        const formData = new FormData(\n                                            document.getElementById(\n                                                \"form\" + modif.id\n                                            )\n                                        );\n                                        fetch(\n                                            API_HOST +\n                                                \"/restaurant/create-rest-modif-variant\",\n                                            {\n                                                method: \"POST\",\n                                                body: formData,\n                                            }\n                                        )\n                                            .then((res) => res.json())\n                                            .then((res) => {\n                                                getData();\n                                                // setNewModif({type: \"single\"})\n                                            });\n                                    }}\n                                >\n                                    Добавить вариант\n                                </Button>\n                            </form>\n                            <br />\n                            {modif.list.map((el) => {\n                                return (\n                                    <Card key={el.id}>\n                                        <div\n                                            style={{\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                justifyContent: \"space-between\",\n                                            }}\n                                        >\n                                            <p>{el.name}</p>\n                                            <span>\n                                                <span>{el.price} руб</span>\n                                                <Button\n                                                    onClick={() =>\n                                                        deleteModif(el.id)\n                                                    }\n                                                    style={{ marginLeft: 20 }}\n                                                >\n                                                    Удалить\n                                                </Button>\n                                            </span>\n                                        </div>\n                                    </Card>\n                                );\n                            })}\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantDelivery = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"single\" });\n\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-delivery-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"price\", newModif.price);\n        data.append(\"price_start\", newModif.price_start);\n        fetch(API_HOST + \"/restaurant/create-rest-delivery\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    return (\n        <>\n            <div>Доставка ресторана</div>\n            <Link to={{ pathname: \"restaurant\", state: { id } }}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Заказ от</span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({\n                            ...newModif,\n                            price_start: e.target.value,\n                        })\n                    }\n                />\n            </label>\n            <label>\n                <span>Стоимость доставки </span>\n                <Input\n                    onChange={(e) =>\n                        setNewModif({ ...newModif, price: e.target.value })\n                    }\n                />\n            </label>\n            <Button onClick={createModif}>Добавить доставку</Button>\n            <Divider />\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                }}\n                            >\n                                <label style={{ flex: 1 }}>\n                                    <span>Заказ от</span>\n                                    <Input\n                                        value={modif.price_start}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/edit-delivery?id=${modif.id}&key=price_start&value=${e.target.value}`\n                                            ).then((res) => getData());\n                                        }}\n                                    />\n                                </label>\n                                <label style={{ flex: 1, padding: 20 }}>\n                                    <span>Стоимость доставки</span>\n                                    <Input\n                                        value={modif.price}\n                                        onChange={(e) => {\n                                            fetch(\n                                                API_HOST +\n                                                    `/restaurant/edit-delivery?id=${modif.id}&key=price&value=${e.target.value}`\n                                            ).then((res) => getData());\n                                        }}\n                                    />\n                                </label>\n                                <div>\n                                    {/* <label>&nbsp;</label> */}\n                                    <br></br>\n                                    <Button\n                                        onClick={() => {\n                                            if (\n                                                window.confirm(\n                                                    \"Подтвердите удаление\"\n                                                )\n                                            ) {\n                                                fetch(\n                                                    API_HOST +\n                                                        `/restaurant/delete-delivery?id=${modif.id}`\n                                                ).then((res) => getData());\n                                            }\n                                        }}\n                                    >\n                                        Удалить\n                                    </Button>\n                                </div>\n                            </div>\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    // Col,\n    // Row,\n    // Select,\n    Button,\n    Input,\n    Divider,\n    // Collapse,\n} from \"antd\";\nimport { API_HOST } from \"../../lib\";\nimport { Link } from \"react-router-dom\";\n// const { Meta } = Card;\n// const { Panel } = Collapse;\n\nexport const RestaurantDiscount = (props) => {\n    const [data, setData] = useState(null);\n    const { id } = props.location.state;\n    const [newModif, setNewModif] = useState({ type: \"promocode\" });\n    const [menu, setMenu] = useState([]);\n    const types = [\n        { value: \"promocode\", name: \"Промокод\" },\n        { value: \"hours\", name: \"Скидка в счастливые часы\" },\n        { value: \"one_plus_one\", name: \"Скидка 1 + 1\" },\n    ];\n    const getData = () => {\n        fetch(API_HOST + \"/restaurant/get-discount-list?restaurant_id=\" + id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n    };\n    useEffect(() => {\n        getData();\n        const formData = new FormData();\n        formData.append(\"rest_id\", id);\n        fetch(API_HOST + \"/restaurant/get-menu\", {\n            method: \"POST\",\n            body: formData,\n        })\n            .then((res) => res.json())\n            .then((res) => setMenu(res.menu));\n        //es\n    }, []);\n    const createModif = () => {\n        const data = new FormData();\n        data.append(\"rest_id\", id);\n        data.append(\"type\", newModif.type ? newModif.type : \"\");\n        data.append(\"name\", newModif.name ? newModif.name : \"\");\n        data.append(\n            \"discount_value\",\n            newModif.discount_value ? newModif.discount_value : \"\"\n        );\n        data.append(\n            \"price_start\",\n            newModif.price_start ? newModif.price_start : \"\"\n        );\n        data.append(\n            \"description\",\n            newModif.description ? newModif.description : \"\"\n        );\n        data.append(\"promocode\", newModif.promocode ? newModif.promocode : \"\");\n        data.append(\n            \"time_start\",\n            newModif.time_start ? newModif.time_start : \"\"\n        );\n        data.append(\"time_end\", newModif.time_end ? newModif.time_end : \"\");\n        data.append(\"items\", newModif.items ? newModif.items : \"\");\n        fetch(API_HOST + \"/restaurant/create-rest-discount\", {\n            method: \"POST\",\n            body: data,\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                getData();\n                // setNewModif({type: \"single\"})\n            });\n    };\n\n    const deleteModif = (modifId) => {\n        if (window.confirm(\"Подтверждение удаления\")) {\n            fetch(\n                API_HOST + \"/restaurant/delete-rest-modif?id=\" + modifId\n            ).then((res) => getData());\n        }\n    };\n    console.log(\"data\", data);\n    console.log(\"newModif\", newModif);\n    console.log(\"menu\", menu);\n    const renderInput = (label, name) => {\n        const key = name;\n        return (\n            <label>\n                <span>{label}</span>\n                <Input\n                    onChange={(e) => {\n                        const modif = { ...newModif };\n                        modif[key] = e.target.value;\n                        setNewModif({ ...modif });\n                    }}\n                />\n            </label>\n        );\n    };\n    const renderInputEdit = (id, label, name, value) => {\n        return (\n            <label>\n                <span>{label}</span>\n                <Input\n                    value={value}\n                    onChange={(e) => {\n                        fetch(\n                            API_HOST +\n                                `/restaurant/edit-discount?id=${id}&key=${name}&value=${e.target.value}`\n                        ).then((res) => getData());\n                    }}\n                />\n            </label>\n        );\n    };\n    return (\n        <>\n            <div>Скидки, акции и промокоды</div>\n            <Link to={{ pathname: \"restaurant\", state: { id } }}>\n                <Button>Назад в меню</Button>\n            </Link>\n            <Divider />\n            <label>\n                <span>Тип скидки</span>\n                <select\n                    style={{ width: \"100%\", height: 40 }}\n                    onChange={(e) => {\n                        setNewModif({ ...newModif, type: e.target.value });\n                    }}\n                >\n                    {types.map((type) => {\n                        return (\n                            <option key={type.value} value={type.value}>\n                                {type.name}\n                            </option>\n                        );\n                    })}\n                </select>\n            </label><br/>\n            {renderInput(\"Название\", \"name\")}\n            <br/>\n            {renderInput(\"Описание\", \"description\")}\n            <br/>\n            {renderInput(\"Промокод\", \"promocode\")}\n            <br/>\n            {renderInput(\n                \"Значение скидки (например 300 р или 20 %  - через пробел)\",\n                \"discount_value\"\n            )}\n            <br/>\n            {renderInput(\"Заказ от (р)\", \"price_start\")}\n            <br/>\n            {renderInput(\"Время начала действия (чч:мм)\", \"time_start\")}\n            <br/>\n            {renderInput(\"Время окончания действия (чч:мм)\", \"time_end\")}\n            <br/>\n            <label>\n                <span>На какие блюда распространяется</span>\n                <select\n                    multiple\n                    style={{ width: \"100%\" }}\n                    onChange={(e) => {\n                        const val = [...e.target.options]\n                            .filter((x) => x.selected)\n                            .map((x) => x.value);\n                        setNewModif({ ...newModif, items: val });\n                    }}\n                >\n                    {menu.map((m) => {\n                        return (\n                            <optgroup label={m.name}>\n                                {m.menu.map((item) => {\n                                    return (\n                                        <option value={item.id}>\n                                            {item.name}\n                                        </option>\n                                    );\n                                })}\n                            </optgroup>\n                        );\n                    })}\n                </select>\n            </label>\n            <br />\n            <br />\n            <Button onClick={createModif}>Добавить акцию</Button>\n            <Divider />\n            <h3>Список акций</h3>\n            {data &&\n                data.length &&\n                data.map((modif) => {\n                    return (\n                        <div key={modif.id}>\n                            <select\n                                style={{ width: \"100%\", height: 40 }}\n                                onChange={(e) => {\n                                    fetch(\n                                        API_HOST +\n                                            `/restaurant/edit-discount?id=${modif.id}&key=type&value=${e.target.value}`\n                                    ).then((res) => getData());\n                                }}\n                                value={modif.type}\n                            >\n                                {types.map((type) => {\n                                    return (\n                                        <option\n                                            key={type.value}\n                                            value={type.value}\n                                        >\n                                            {type.name}\n                                        </option>\n                                    );\n                                })}\n                            </select>\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Название\",\n                                \"name\",\n                                modif.name\n                            )}\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Описание\",\n                                \"description\",\n                                modif.description\n                            )}\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Промокод\",\n                                \"promocode\",\n                                modif.promocode\n                            )}\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Значение скидки (например 300 р или 20 %  - через пробел)\",\n                                \"discount_value\",\n                                modif.discount_value\n                            )}\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Заказ от (р)\",\n                                \"price_start\",\n                                modif.price_start\n                            )}\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Время начала действия (чч:мм)\",\n                                \"time_start\",\n                                modif.time_start\n                            )}\n                            <br/>\n                            {renderInputEdit(\n                                modif.id,\n                                \"Время окончания действия (чч:мм)\",\n                                \"time_end\",\n                                modif.time_end\n                            )}\n                            <br/>\n                            <label>\n                                <span>На какие блюда распространяется</span>\n                                <select\n                                    multiple\n                                    style={{ width: \"100%\" }}\n                                    value={\n                                        modif.items\n                                            ? modif.items.split(\",\")\n                                            : []\n                                    }\n                                    onChange={(e) => {\n                                        const val = [...e.target.options]\n                                            .filter((x) => x.selected)\n                                            .map((x) => x.value);\n                                        fetch(\n                                            API_HOST +\n                                                `/restaurant/edit-discount?id=${modif.id}&key=items&value=${val}`\n                                        ).then((res) => getData());\n                                    }}\n                                >\n                                    {menu.map((m) => {\n                                        return (\n                                            <optgroup label={m.name}>\n                                                {m.menu.map((item) => {\n                                                    return (\n                                                        <option value={item.id}>\n                                                            {item.name}\n                                                        </option>\n                                                    );\n                                                })}\n                                            </optgroup>\n                                        );\n                                    })}\n                                </select>\n                            </label>\n                            <br/><br/>\n                            <Button\n                                onClick={() => {\n                                    if (\n                                        window.confirm(\"Подтвердите удаление\")\n                                    ) {\n                                        fetch(\n                                            API_HOST +\n                                                `/restaurant/delete-discount?id=${modif.id}`\n                                        ).then((res) => getData());\n                                    }\n                                }}\n                            >\n                                Удалить акцию\n                            </Button>\n                            <Divider />\n                        </div>\n                    );\n                })}\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport { routes } from \"./pages\";\n\nexport const Routes = () => <>{renderRoutes(routes())}</>;\n","import { HomePage } from \"./HomePage\";\nimport { AddRest } from \"./AddRest\";\nimport { ListRest } from \"./ListRest\";\nimport { RestaurantPage } from \"./RestaurantPage\";\nimport { RestaurantMenu } from \"./RestaurantMenu\";\nimport { RestaurantModif } from \"./RestaurantModif\";\nimport { RestaurantDelivery } from \"./RestaurantDelivery\";\nimport { RestaurantDiscount } from \"./RestaurantDiscount\";\n\nexport const routes = () => [\n    {\n        path: \"/\",\n        exact: true,\n        component: HomePage,\n    },\n    {\n        path: \"/add-rest\",\n        component: AddRest,\n    },\n    {\n        path: \"/list-rest\",\n        component: ListRest,\n    },\n    {\n        path: \"/restaurant\",\n        component: RestaurantPage,\n    },\n    {\n        path: \"/restaurant-menu\",\n        component: RestaurantMenu,\n    },\n    {\n        path: \"/restaurant-modif\",\n        component: RestaurantModif,\n    },\n    {\n        path: \"/restaurant-delivery\",\n        component: RestaurantDelivery,\n    },\n    {\n        path: \"/restaurant-discount\",\n        component: RestaurantDiscount,\n    },\n];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { history } from \"./lib\";\nimport { App } from \"./app\";\nimport { store, persistor } from \"./lib\";\nconst root = document.querySelector(\"#root\");\nconst render = () => {\n    if (root) {\n        ReactDOM.render(\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <Router history={history}>\n                        <App />\n                    </Router>\n                </PersistGate>\n            </Provider>,\n            root\n        );\n    }\n};\n\nif (module.hot) {\n    module.hot.accept(\"./app\", render);\n}\n\nrender();\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n// import { sideBarReducer, categoriesReducer } from \"../../features\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { mainReducer } from \"./reducer\";\nconst persistConfig = {\n    key: \"main\",\n    storage,\n};\nconst rootReducer = combineReducers({\n    main: persistReducer(persistConfig, mainReducer),\n    // sidebar: sideBarReducer,\n    // categories: categoriesReducer,\n});\n\n// const persistedReducer =\n\nlet enhacers;\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n    enhacers = applyMiddleware(thunk, createLogger({ collapsed: true }));\n} else {\n    enhacers = applyMiddleware(thunk);\n}\n\nfunction configureStore() {\n    const store = createStore(rootReducer, undefined, enhacers);\n    return store;\n}\n\nexport const store = configureStore();\nexport const persistor = persistStore(store);\n","import { createBrowserHistory } from \"history\"\n\nexport const history = createBrowserHistory()","const initialState = {\n    user: undefined,\n};\nexport const mainReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user,\n            };\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n","export * from \"./theme\";\nexport * from \"./routing\";\nexport * from \"./store\";\nexport * from \"./links\";\nexport * from \"./containers\";\nexport const API_HOST =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://app.vegfood.delivery\"\n    : \"http://localhost:21080\";\n","export const Color = {\n    black: \"#333\",\n    red: \"#cc3333\",\n    gray: \"rgb(113, 113, 113)\",\n    light_gray: \"#F2F2F2\",\n};\n\nexport const Media = {\n    mobile: \"@media screen and (max-width: 500px)\",\n    tablet: \"@media screen and (max-width: 800px)\",\n    smallDesktop: \"@media screen and (max-width: 1151px)\",\n};"],"sourceRoot":""}